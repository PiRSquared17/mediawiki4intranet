# HG changeset patch
# User Vitaliy Filippov <vitalif@yourcmc.ru>
# Date 1309879177 -14400
Bug 60996 - Support environment proxy settings for HTTP downloads, allow HTTPS downloads
HTTPS is added to upload-proto-error-text message only in English and Russian languages.
Bug 82496 - Support environment no_proxy settings for scary transclusions

diff -r 45da8fc662c9 -r 4f291f91dd88 includes/HttpFunctions.php
--- includes/HttpFunctions.php
+++ includes/HttpFunctions.php
@@ -113,6 +113,64 @@
 			$matches
 		);
 	}
+
+	/**
+	 * Determine HTTP proxy from environment settings respecting
+	 * 'http_proxy' and 'no_proxy' environment variables
+	 */
+	public static function envProxy( $url )
+	{
+		if ( $proxy = getenv( "http_proxy" ) )
+		{
+			$useproxy = true;
+			if ( $url && ( $noproxy = preg_split( "#\s*,\s*#is", getenv( "no_proxy" ) ) ) )
+			{
+				foreach ( $noproxy as $n )
+				{
+					if ( preg_match('#(\d+)\.(\d+)\.(\d+)\.(\d+)/(\d+)#s', $n, $m) &&
+						preg_match('#^[a-z0-9_]+://(?:[^/]*:[^/]*@)?([^/@]+)(?:/|$|\?)#is', $url, $ip) )
+					{
+						$mask = array(
+							max( 0x100 - ( 1 << max(  8-$m[5], 0 ) ), 0 ),
+							max( 0x100 - ( 1 << max( 16-$m[5], 0 ) ), 0 ),
+							max( 0x100 - ( 1 << max( 24-$m[5], 0 ) ), 0 ),
+							max( 0x100 - ( 1 << max( 32-$m[5], 0 ) ), 0 ),
+						);
+						$ip = @gethostbyname( $ip[1] );
+						if ( preg_match( '#(\d+)\.(\d+)\.(\d+)\.(\d+)#s', $ip, $ipm ) &&
+							( intval( $ipm[1] ) & $mask[0] ) == intval( $m[1] ) &&
+							( intval( $ipm[2] ) & $mask[1] ) == intval( $m[2] ) &&
+							( intval( $ipm[3] ) & $mask[2] ) == intval( $m[3] ) &&
+							( intval( $ipm[4] ) & $mask[3] ) == intval( $m[4] ) )
+						{
+							$useproxy = false;
+							break;
+						}
+					}
+					else
+					{
+						$n = preg_replace( '/#.*$/is', '', $n );
+						$n = preg_quote( $n );
+						$n = str_replace( '\\*', '.*', $n );
+						if ( preg_match( '#'.$n.'#is', $url ) )
+						{
+							$useproxy = false;
+							break;
+						}
+					}
+				}
+			}
+			if ( $useproxy )
+			{
+				$proxy = preg_replace( '#^http://#is', '', $proxy );
+				$proxy = preg_replace( '#/*$#is', '', $proxy );
+			}
+			else
+				$proxy = '';
+			return $proxy;
+		}
+		return NULL;
+	}
 }
 
 /**
@@ -225,8 +283,8 @@
 			$this->proxy = 'http://localhost:80/';
 		} elseif ( $wgHTTPProxy ) {
 			$this->proxy = $wgHTTPProxy ;
-		} elseif ( getenv( "http_proxy" ) ) {
-			$this->proxy = getenv( "http_proxy" );
+		} elseif ( ( $env_proxy = Http::envProxy( $this->url ) ) !== NULL ) {
+			$this->proxy = $env_proxy;
 		}
 	}
 
diff -r 45da8fc662c9 -r 4f291f91dd88 includes/upload/UploadFromUrl.php
--- includes/upload/UploadFromUrl.php
+++ includes/upload/UploadFromUrl.php
@@ -68,7 +68,7 @@
 
 	public static function isValidUrl( $url ) {
 		// Only allow HTTP or FTP for now
-		return (bool)preg_match( '!^(http://|ftp://)!', $url );
+		return (bool)preg_match( '!^(https?://|ftp://)!', $url );
 	}
 
 	/**
@@ -78,60 +78,47 @@
 		if( !self::isValidUrl( $this->mUrl ) ) {
 			return Status::newFatal( 'upload-proto-error' );
 		}
-		$res = $this->curlCopy();
-		if( $res !== true ) {
-			return Status::newFatal( $res );
-		}
-		return Status::newGood();
+		return $this->httpCopy();
 	}
 
 	/**
 	 * Safe copy from URL
 	 * Returns true if there was an error, false otherwise
 	 */
-	private function curlCopy() {
+	private function httpCopy() {
 		global $wgOut;
 
 		# Open temporary file
-		$this->mCurlDestHandle = @fopen( $this->mTempPath, "wb" );
-		if( $this->mCurlDestHandle === false ) {
+		$this->mDestHandle = @fopen( $this->mTempPath, "wb" );
+		if( $this->mDestHandle === false ) {
 			# Could not open temporary file to write in
 			return 'upload-file-error';
 		}
 
-		$ch = curl_init();
-		curl_setopt( $ch, CURLOPT_HTTP_VERSION, 1.0); # Probably not needed, but apparently can work around some bug
-		curl_setopt( $ch, CURLOPT_TIMEOUT, 10); # 10 seconds timeout
-		curl_setopt( $ch, CURLOPT_LOW_SPEED_LIMIT, 512); # 0.5KB per second minimum transfer speed
-		curl_setopt( $ch, CURLOPT_URL, $this->mUrl);
-		curl_setopt( $ch, CURLOPT_WRITEFUNCTION, array( $this, 'uploadCurlCallback' ) );
-		curl_exec( $ch );
-		$error =  curl_errno( $ch );
-		curl_close( $ch );
+		$request = HttpRequest::factory( $this->mUrl, array( 'timeout' => 10 ) );
+		$request->setCallback( array( $this, 'uploadCallback' ) );
+		$status = $request->execute();
 
-		fclose( $this->mCurlDestHandle );
-		unset( $this->mCurlDestHandle );
+		fclose( $this->mDestHandle );
+		unset( $this->mDestHandle );
 
-		if( $error )
-			return "upload-curl-error$errornum";
-
-		return true;
+		return $status;
 	}
 
 	/**
-	 * Callback function for CURL-based web transfer
+	 * Callback function for web transfer
 	 * Write data to file unless we've passed the length limit;
 	 * if so, abort immediately.
 	 * @access private
 	 */
-	function uploadCurlCallback( $ch, $data ) {
+	function uploadCallback( $ch, $data ) {
 		global $wgMaxUploadSize;
 		$length = strlen( $data );
 		$this->mFileSize += $length;
 		if( $this->mFileSize > $wgMaxUploadSize ) {
 			return 0;
 		}
-		fwrite( $this->mCurlDestHandle, $data );
+		fwrite( $this->mDestHandle, $data );
 		return $length;
 	}
 }
diff -r 45da8fc662c9 -r 4f291f91dd88 languages/messages/MessagesEn.php
--- languages/messages/MessagesEn.php
+++ languages/messages/MessagesEn.php
@@ -2126,7 +2126,7 @@
  #</pre> <!-- leave this line exactly as it is -->', # only translate this message to other languages if you have to change it
 
 'upload-proto-error'        => 'Incorrect protocol',
-'upload-proto-error-text'   => 'Remote upload requires URLs beginning with <code>http://</code> or <code>ftp://</code>.',
+'upload-proto-error-text'   => 'Remote upload requires URLs beginning with <code>http://</code>, <code>https://</code> or <code>ftp://</code>.',
 'upload-file-error'         => 'Internal error',
 'upload-file-error-text'    => 'An internal error occurred when attempting to create a temporary file on the server.
 Please contact an [[Special:ListUsers/sysop|administrator]].',
diff -r 45da8fc662c9 -r 4f291f91dd88 languages/messages/MessagesRu.php
--- languages/messages/MessagesRu.php
+++ languages/messages/MessagesRu.php
@@ -1666,7 +1666,7 @@
  #</pre> <!-- оставьте эту строчку как есть -->',
 
 'upload-proto-error'        => 'Неправильный протокол',
-'upload-proto-error-text'   => 'Для удалённой загрузки требуется адрес, начинающийся с <code>http://</code> или <code>ftp://</code>.',
+'upload-proto-error-text'   => 'Для удалённой загрузки требуется адрес, начинающийся с <code>http://</code>, <code>https://</code> или <code>ftp://</code>.',
 'upload-file-error'         => 'Внутренняя ошибка',
 'upload-file-error-text'    => 'Внутренняя ошибка при попытке создать временный файл на сервере.
 Пожалуйста, обратитесь к [[Special:ListUsers/sysop|администратору]].',
diff -r 45da8fc662c9 -r 4f291f91dd88 languages/messages/MessagesRue.php
--- languages/messages/MessagesRue.php
+++ languages/messages/MessagesRue.php
@@ -1375,7 +1375,7 @@
 'filename-bad-prefix'         => "Назва файлу, котрый начітавате ся зачінать на '''„$1“''', што не є назва звычайно приряджована діґіталным фотоапаратом. Звольте іншу назву, котра ваш файл попише лїпше.",
 
 'upload-proto-error'        => 'Неплатный протокол',
-'upload-proto-error-text'   => 'Награня вздаленого файлу пожадує зазначіня URLs з початком <code>http://</code> або <code>ftp://</code>.',
+'upload-proto-error-text'   => 'Награня вздаленого файлу пожадує зазначіня URLs з початком <code>http://</code>, <code>https://</code> або <code>ftp://</code>.',
 'upload-file-error'         => 'Інтерна хыба',
 'upload-file-error-text'    => 'Почас спробы створїня дочасного файлу настала внутрїшня хыба на сервері.
 Просиме контактуйте  [[Special:ListUsers/sysop|адміністратора]].',
