# HG changeset patch
# User Vitaliy Filippov <vitali@st-filippov.office.custis.ru>
# Date 1300901968 -10800
Bug 75715, Bug 68935 - Add Localisation Cache support for CACHE_ACCEL

diff -r 9cc4b1960d33 -r 8be5fd631137 includes/LocalisationCache.php
--- includes/LocalisationCache.php
+++ includes/LocalisationCache.php
@@ -155,8 +155,12 @@
 				case 'db':
 					$storeClass = 'LCStore_DB';
 					break;
+				case 'accel':
 				case 'detect':
-					$storeClass = $wgCacheDirectory ? 'LCStore_CDB' : 'LCStore_DB';
+					if ( !( wfGetCache( CACHE_ACCEL ) instanceof FakeMemCachedClient ) )
+						$storeClass = 'LCStore_Accel';
+					else
+						$storeClass = $wgCacheDirectory ? 'LCStore_CDB' : 'LCStore_DB';
 					break;
 				default:
 					throw new MWException( 
@@ -744,6 +748,60 @@
 }
 
 /**
+ * LCStore implementation which uses PHP accelerator to store data.
+ * This will work if one of XCache, eAccelerator, or APC cacher is configured.
+ * (See ObjectCache.php)
+ */
+class LCStore_Accel implements LCStore
+{
+	var $currentLang;
+	var $keys;
+
+	public function __construct()
+	{
+		$this->cache = wfGetCache( CACHE_ACCEL );
+	}
+
+	public function get( $code, $key )
+	{
+		$k = wfMemcKey( 'l10n', $code, 'k', $key );
+		return $this->cache->get( $k );
+	}
+
+	public function startWrite( $code )
+	{
+		$k = wfMemcKey( 'l10n', $code, 'l' );
+		$keys = $this->cache->get( $k );
+		if ( $keys )
+			foreach ( $keys as $k )
+				$this->cache->delete( $k );
+		$this->currentLang = $code;
+		$this->keys = array();
+	}
+
+	public function finishWrite()
+	{
+		if ($this->currentLang)
+		{
+			$k = wfMemcKey( 'l10n', $code, 'l' );
+			$this->cache->set( $k, array_keys( $this->keys ) );
+		}
+		$this->currentLang = NULL;
+		$this->keys = array();
+	}
+
+	public function set( $key, $value )
+	{
+		if ($this->currentLang)
+		{
+			$k = wfMemcKey( 'l10n', $code, 'k', $key );
+			$this->keys[$k] = true;
+			$this->cache->set( wfMemcKey( $k, $value ), $value );
+		}
+	}
+}
+
+/**
  * LCStore implementation which uses the standard DB functions to store data. 
  * This will work on any MediaWiki installation.
  */
