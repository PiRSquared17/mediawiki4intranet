# HG changeset patch
# User Vitaliy Filippov <vitali@st-filippov.office.custis.ru>
# Date 1272377229 -14400
Bug 63447 - (HaloACL extension part) patch for MediaWiki right support

diff -r 5876298878ad -r 2325a0cf456f extensions/CategoryTree/CategoryTreeFunctions.php
--- extensions/CategoryTree/CategoryTreeFunctions.php
+++ extensions/CategoryTree/CategoryTreeFunctions.php
@@ -310,7 +310,9 @@
 		global $wgDBname;
 		$title = self::makeTitle( $category );
 
-		if ( ! $title ) return false; #TODO: error message?
+/*op-patch|TS|2010-04-27|HaloACL|SafeTitle|start*/
+		if ( ! $title || method_exists($title, 'userCanReadEx') && !$title->userCanReadEx() ) return false; #TODO: error message?
+/*op-patch|TS|2010-04-27|end*/
 
 		# Retrieve page_touched for the category
 		$dbkey = $title->getDBkey();
@@ -362,7 +364,9 @@
 		}
 		$title = self::makeTitle( $category );
 
-		if ( $title === false || $title === NULL ) return false;
+/*op-patch|TS|2010-04-27|HaloACL|SafeTitle|start*/
+		if ( $title === false || $title === NULL || method_exists($title, 'userCanReadEx') && !$title->userCanReadEx() ) return false;
+/*op-patch|TS|2010-04-27|end*/
 
 		if ( isset( $attr['class'] ) ) $attr['class'] .= ' CategoryTreeTag';
 		else $attr['class'] = ' CategoryTreeTag';
@@ -489,6 +493,10 @@
 				#TODO: translation support; ideally added to Title object
 				$t = Title::newFromRow( $row );
 			}
+/*op-patch|TS|2010-04-27|HaloACL|SafeTitle|start*/
+			if ( method_exists($t, 'userCanReadEx') && !$t->userCanReadEx() )
+				continue;
+/*op-patch|TS|2010-04-27|end*/
 
 			$cat = NULL;
 
@@ -541,6 +549,10 @@
 		while ( $row = $dbr->fetchObject( $res ) ) {
 			#TODO: translation support; ideally added to Title object
 			$t = Title::newFromRow( $row );
+/*op-patch|TS|2010-04-27|HaloACL|SafeTitle|start*/
+			if ( method_exists($t, 'userCanReadEx') && !$t->userCanReadEx() )
+				continue;
+/*op-patch|TS|2010-04-27|end*/
 
 			#$trans = $title->getLocalizedText();
 			$trans = ''; #place holder for when translated titles are available
diff -r 5876298878ad -r 2325a0cf456f extensions/DeleteBatch/DeleteBatch.body.php
--- extensions/DeleteBatch/DeleteBatch.body.php
+++ extensions/DeleteBatch/DeleteBatch.body.php
@@ -231,8 +231,8 @@
 	function deletePage($line, $reason = '', &$db, $multi = false, $linenum = 0, $user = null) {
 		global $wgOut, $wgUser;
 		$page = Title::newFromText ($line);
-			if (is_null($page)) { /* invalid title? */
-			   	$wgOut->addWikiText( wfMsg('deletebatch-omitting-invalid', $line) );
+		if (is_null($page)) { /* invalid title? */
+			$wgOut->addWikiText( wfMsg('deletebatch-omitting-invalid', $line) );
 			if (!$multi) {
 				if (!is_null($user)) {
 					$wgUser = $user;
@@ -241,7 +241,18 @@
 			return false;
 		}
 		if (!$page->exists()) { /* no such page? */
-				$wgOut->addWikiText( wfMsg('deletebatch-omitting-nonexistant', $line) );
+			$wgOut->addWikiText( wfMsg('deletebatch-omitting-nonexistant', $line) );
+			if (!$multi) {
+				if (!is_null($user)) {
+					$wgUser = $user;
+				}
+			}
+			return false;
+		}
+
+		$allowed = wfRunHooks( 'userCan', array( &$page, &$wgUser, "delete", &$result ) );
+		if( !$allowed ) {
+			$wgOut->addWikiText( wfMsg('deletebatch-permission-denied', $line) );
 			if (!$multi) {
 				if (!is_null($user)) {
 					$wgUser = $user;
@@ -252,7 +263,7 @@
 
 		$db->begin();
 		if( NS_MEDIA == $page->getNamespace() ) {
-		   	$page = Title::makeTitle(NS_IMAGE, $page->getDBkey ());
+			$page = Title::makeTitle(NS_IMAGE, $page->getDBkey ());
 		}
 
 		/* this stuff goes like articleFromTitle in Wiki.php */
@@ -268,8 +279,8 @@
 		/* 	what is the generic reason for page deletion?
 			something about the content, I guess...
 		*/
-			$art->doDelete($reason);
-			$db->immediateCommit();
+		$art->doDelete($reason);
+		$db->immediateCommit();
 		return true;
 	}
 
diff -r 5876298878ad -r 2325a0cf456f extensions/DeleteBatch/DeleteBatch.i18n.php
--- extensions/DeleteBatch/DeleteBatch.i18n.php
+++ extensions/DeleteBatch/DeleteBatch.i18n.php
@@ -32,6 +32,7 @@
 	'deletebatch-link-back' => 'You can go back to the extension ',
 	'deletebatch-omitting-nonexistant' => 'Omitting non-existing page $1.',
 	'deletebatch-omitting-invalid' => 'Omitting invalid page $1.',
+	'deletebatch-permission-denied' => 'Permission denied for page $1.',
 	'deletebatch-file-bad-format' => 'The file should be plain text',
 	'deletebatch-file-missing' => 'Unable to read given file',
 	'deletebatch-select-script' => 'delete page script',
diff -r 5876298878ad -r 2325a0cf456f extensions/DeleteBatch/DeleteBatch.php
--- extensions/DeleteBatch/DeleteBatch.php
+++ extensions/DeleteBatch/DeleteBatch.php
@@ -26,3 +26,4 @@
 $wgAutoloadClasses['DeleteBatch'] = $dir. 'DeleteBatch.body.php';
 $wgSpecialPages['DeleteBatch'] = 'DeleteBatch';
 $wgSpecialPageGroups['DeleteBatch'] = 'pagetools';
+
diff -r 5876298878ad -r 2325a0cf456f includes/CategoryPage.php
--- includes/CategoryPage.php
+++ includes/CategoryPage.php
@@ -145,6 +145,11 @@
 	 * @deprecated kept for compatibility, please use addSubcategoryObject instead
 	 */
 	function addSubcategory( $title, $sortkey, $pageLength ) {
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+		if (!$title->userCanReadEx()) {
+			return;
+		}
+/*op-patch|TS|2009-06-19|end*/  
 		global $wgContLang;
 		// Subcategory; strip the 'Category' namespace from the link text.
 		$this->children[] = $this->getSkin()->makeKnownLinkObj(
@@ -191,6 +196,12 @@
 	 * Add a miscellaneous page
 	 */
 	function addPage( $title, $sortkey, $pageLength, $isRedirect = false ) {
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+		if (!$title->userCanReadEx()) {
+			return;
+		}
+/*op-patch|TS|2009-06-19|end*/  
+		
 		global $wgContLang;
 		$this->articles[] = $isRedirect
 			? '<span class="redirect-in-category">' . $this->getSkin()->makeKnownLinkObj( $title ) . '</span>'
diff -r 5876298878ad -r 2325a0cf456f includes/LogEventsList.php
--- includes/LogEventsList.php
+++ includes/LogEventsList.php
@@ -230,6 +230,12 @@
 		global $wgLang, $wgUser, $wgContLang;
 
 		$title = Title::makeTitle( $row->log_namespace, $row->log_title );
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+		if (!$title->userCanReadEx()) {
+			return '';
+		}
+/*op-patch|TS|2009-06-19|end*/  
+		
 		$time = $wgLang->timeanddate( wfTimestamp(TS_MW, $row->log_timestamp), true );
 		// User links
 		if( self::isDeleted($row,LogPage::DELETED_USER) ) {
diff -r 5876298878ad -r 2325a0cf456f includes/PageHistory.php
--- includes/PageHistory.php
+++ includes/PageHistory.php
@@ -321,8 +321,14 @@
 			$s .= ' ' . $this->mSkin->formatRevisionSize( $size );
 		}
 
-		$s .= $this->mSkin->revComment( $rev, false, true );
-
+/*op-patch|TS|2009-11-05|HaloACL|Protected properties|start*/
+		global $haclgProtectProperties;
+		if (!$haclgProtectProperties) {
+			// The comment for an article might reveal values of protected properties
+			$s .= $this->mSkin->revComment( $rev, false, true );
+		}
+/*op-patch|TS|2009-11-05|end*/  
+		
 		if( $notificationtimestamp && ($row->rev_timestamp >= $notificationtimestamp) ) {
 			$s .= ' <span class="updatedmarker">' .  wfMsgHtml( 'updatedmarker' ) . '</span>';
 		}
diff -r 5876298878ad -r 2325a0cf456f includes/QueryPage.php
--- includes/QueryPage.php
+++ includes/QueryPage.php
@@ -399,6 +399,13 @@
 			# $res might contain the whole 1,000 rows, so we read up to
 			# $num [should update this to use a Pager]
 			for( $i = 0; $i < $num && $row = $dbr->fetchObject( $res ); $i++ ) {
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+				$title = Title::makeTitleSafe( $row->namespace, $row->title );
+				if (!$title->userCanReadEx()) {
+					continue;
+				}
+/*op-patch|TS|2009-06-19|end*/  
+				
 				$line = $this->formatResult( $skin, $row );
 				if( $line ) {
 					$attr = ( isset( $row->usepatrol ) && $row->usepatrol && $row->patrolled == 0 )
diff -r 5876298878ad -r 2325a0cf456f includes/Title.php
--- includes/Title.php
+++ includes/Title.php
@@ -89,7 +89,11 @@
 		$t = new Title();
 		$t->mDbkeyform = $key;
 		if( $t->secureAndSplit() )
-			return $t;
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+			return $t->checkAccessControl();
+/*op-patch|TS|2009-06-19|end*/  
+//Replaced by patch		return $t;
+		
 		else
 			return NULL;
 	}
@@ -143,7 +147,10 @@
 				$cachedcount++;
 				Title::$titleCache[$text] =& $t;
 			}
-			return $t;
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+			return $t->checkAccessControl();
+/*op-patch|TS|2009-06-19|end*/  
+// Preplaced by patch			return $t;
 		} else {
 			$ret = NULL;
 			return $ret;
@@ -169,7 +176,10 @@
 
 		$t->mDbkeyform = str_replace( ' ', '_', $url );
 		if( $t->secureAndSplit() ) {
-			return $t;
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+			return $t->checkAccessControl();
+/*op-patch|TS|2009-06-19|end*/  
+// Preplaced by patch			return $t;
 		} else {
 			return NULL;
 		}
@@ -255,7 +265,11 @@
 		$t->mArticleID = ( $ns >= 0 ) ? -1 : 0;
 		$t->mUrlform = wfUrlencode( $t->mDbkeyform );
 		$t->mTextform = str_replace( '_', ' ', $title );
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+		$t = $t->checkAccessControl();
 		return $t;
+/*op-patch|TS|2009-06-19|end*/  
+// Preplaced by patch		return $t;
 	}
 
 	/**
@@ -272,7 +286,10 @@
 		$t = new Title();
 		$t->mDbkeyform = Title::makeName( $ns, $title, $fragment );
 		if( $t->secureAndSplit() ) {
-			return $t;
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+			return $t->checkAccessControl();
+/*op-patch|TS|2009-06-19|end*/  
+// Preplaced by patch			return $t;
 		} else {
 			return NULL;
 		}
@@ -3396,4 +3413,105 @@
 		}
 		return $redirs;
 	}
+
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+	
+	/**
+	 * This function is called from the patches for HaloACL for secure listings 
+	 * (e.g. Spcecial:AllPages). It checks, whether the current user is allowed
+	 * to read the article for this title object. For normal pages this is 
+	 * evaluate in the method <userCanRead>. 
+	 * However, the special pages that generate listings, often create title 
+	 * objects before the can check their accessibility. The fallback mechanism
+	 * of HaloACL creates the title "Permission denied" for the article that 
+	 * must not be accessed. The listings would then show a link to "Permission
+	 * denied". So this function returns "false" for the title "Permission denied"
+	 * as well. 
+	 *
+	 * @return 
+	 * 		true, if this title can be read
+	 * 		false, if the title is protected or "Permission denied".
+	 */
+	public function userCanReadEx() {
+		if (!defined('HACL_HALOACL_VERSION')) {
+			//HaloACL is disabled
+			return true;
+		}
+		global $haclgContLang;
+		return $this->mTextform !== $haclgContLang->getPermissionDeniedPage() 
+		       && $this->userCanRead();
+	}
+	
+	/**
+	 * This function checks, if this title is accessible for the action of the
+	 * current request. If the action is unknown it is assumed to be "read".
+	 * If the title is not accessible, the new title "Permission denied" is 
+	 * returned. This is a fallback to protect titles if all other security 
+	 * patches fail.
+	 * 
+	 * While a page is rendered, the same title is often checked several times. 
+	 * To speed things up, the results of an accessibility check are internally
+	 * cached.  
+	 * 
+	 * This function can be disabled in HACL_Initialize.php or LocalSettings.php
+	 * by setting the variable $haclgEnableTitleCheck = false.
+	 *
+	 * @return 
+	 * 		$this, if access is granted on this title or
+	 * 		the title for "Permission denied" if not.
+	 */
+	private function checkAccessControl() {
+		if (!defined('HACL_HALOACL_VERSION')) {
+			//HaloACL is disabled
+			return $this;
+		}
+		global $haclgEnableTitleCheck;
+		if (isset($haclgEnableTitleCheck) && $haclgEnableTitleCheck === false) {
+			return $this;  
+		}
+		static $permissionCache = array();
+		
+		global $wgRequest;
+		$action = $wgRequest->getVal( 'action', 'read');
+		$currentTitle = $wgRequest->getVal('title');
+		$currentTitle = str_replace( '_', ' ', $currentTitle);
+		if ($this->getFullText() != $currentTitle) {
+			$action = 'read';
+		}
+//		echo $this->getText()."($action): ";
+		$index = $this->getFullText().'-'.$action; // A bug was fixed here thanks to Dave MacDonald
+		$allowed = @$permissionCache[$index];
+		if (!isset($allowed)) {
+			switch ($action) {
+				case 'create':
+					$allowed = $this->userCanCreate();
+					break;
+				case 'edit':
+					$allowed = $this->userCanEdit();
+					break;
+				case 'move':
+					$allowed = $this->userCanMove();
+					break;
+				case 'annotate':
+					$allowed = $this->userCan($action);
+					break;
+				default:
+					$allowed = $this->userCanRead();
+			}
+			$permissionCache[$index] = $allowed;
+		}
+		if ($allowed === false) {
+//			echo "no\n";
+			global $haclgContLang;
+			$etc = $haclgEnableTitleCheck;
+			$haclgEnableTitleCheck = false;
+			$t = Title::newFromURL($haclgContLang->getPermissionDeniedPage());
+			$haclgEnableTitleCheck = $etc;
+			return $t;
+		}
+//		echo "yes\n";
+		return $this;
+	}
+/*op-patch|TS|2009-06-19|end*/  
+
 }
diff -r 5876298878ad -r 2325a0cf456f includes/specials/SpecialAllpages.php
--- includes/specials/SpecialAllpages.php
+++ includes/specials/SpecialAllpages.php
@@ -303,6 +303,11 @@
 
 				while( ( $n < $this->maxPerPage ) && ( $s = $res->fetchObject() ) ) {
 					$t = Title::makeTitle( $s->page_namespace, $s->page_title );
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+				if ($t && !$t->userCanReadEx()) {
+					continue; 
+				}
+/*op-patch|TS|2009-06-19|end*/  
 					if( $t ) {
 						$link = ( $s->page_is_redirect ? '<div class="allpagesredirect">' : '' ) .
 							$sk->makeKnownLinkObj( $t, htmlspecialchars( $t->getText() ), false, false ) .
diff -r 5876298878ad -r 2325a0cf456f includes/specials/SpecialListredirects.php
--- includes/specials/SpecialListredirects.php
+++ includes/specials/SpecialListredirects.php
@@ -39,6 +39,12 @@
 		if( $revision ) {
 			# Make a link to the destination page
 			$target = Title::newFromRedirect( $revision->getText() );
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+			if (!$target->userCanReadEx()) {
+				return;
+			}
+/*op-patch|TS|2009-06-19|end*/  
+			
 			if( $target ) {
 				$arr = $wgContLang->getArrow() . $wgContLang->getDirMark();
 				$targetLink = $skin->makeLinkObj( $target );
diff -r 5876298878ad -r 2325a0cf456f includes/specials/SpecialNewpages.php
--- includes/specials/SpecialNewpages.php
+++ includes/specials/SpecialNewpages.php
@@ -238,6 +238,12 @@
 		$dm = $wgContLang->getDirMark();
 
 		$title = Title::makeTitleSafe( $result->rc_namespace, $result->rc_title );
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+		if (!$title->userCanReadEx()) {
+			return;
+		}
+/*op-patch|TS|2009-06-19|end*/  
+
 		$time = $wgLang->timeAndDate( $result->rc_timestamp, true );
 		$plink = $this->skin->makeKnownLinkObj( $title, '', $this->patrollable( $result ) ? 'rcid=' . $result->rc_id : '' );
 		$hist = $this->skin->makeKnownLinkObj( $title, wfMsgHtml( 'hist' ), 'action=history' );
diff -r 5876298878ad -r 2325a0cf456f includes/specials/SpecialPrefixindex.php
--- includes/specials/SpecialPrefixindex.php
+++ includes/specials/SpecialPrefixindex.php
@@ -138,6 +138,11 @@
 	
 				while( ( $n < $this->maxPerPage ) && ( $s = $res->fetchObject() ) ) {
 					$t = Title::makeTitle( $s->page_namespace, $s->page_title );
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+					if ($t && !$t->userCanReadEx()) {
+						continue; 
+					}
+/*op-patch|TS|2009-06-19|end*/  
 					if( $t ) {
 						$link = ($s->page_is_redirect ? '<div class="allpagesredirect">' : '' ) .
 							$sk->makeKnownLinkObj( $t, htmlspecialchars( $t->getText() ), false, false ) .
diff -r 5876298878ad -r 2325a0cf456f includes/specials/SpecialRecentchanges.php
--- includes/specials/SpecialRecentchanges.php
+++ includes/specials/SpecialRecentchanges.php
@@ -348,6 +348,13 @@
 
 		$s = $list->beginRecentChangesList();
 		foreach( $rows as $obj ) {
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+			$rc = RecentChange::newFromRow( $obj );
+			if (!$rc->getTitle()->userCanReadEx()) {
+				continue;
+			}
+/*op-patch|TS|2009-06-19|end*/  
+
 			if( $limit == 0 ) break;
 			$rc = RecentChange::newFromRow( $obj );
 			$rc->counter = $counter++;
diff -r 5876298878ad -r 2325a0cf456f includes/specials/SpecialSearch.php
--- includes/specials/SpecialSearch.php
+++ includes/specials/SpecialSearch.php
@@ -1145,7 +1145,14 @@
 		$out .= "<ul class='mw-search-results'>\n";
 
 		while( $result = $matches->next() ) {
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+			if (($result->getTitle() != NULL) 
+			    && ($result->getTitle()->userCanReadEx())) {
+/*op-patch|TS|2009-06-19|end*/  
 			$out .= $this->showHit( $result, $terms );
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+			}
+/*op-patch|TS|2009-06-19|end*/  
 		}
 		$out .= "</ul>\n";
 
diff -r 5876298878ad -r 2325a0cf456f includes/specials/SpecialWatchlist.php
--- includes/specials/SpecialWatchlist.php
+++ includes/specials/SpecialWatchlist.php
@@ -328,6 +328,12 @@
 	while ( $obj = $dbr->fetchObject( $res ) ) {
 		# Make RC entry
 		$rc = RecentChange::newFromRow( $obj );
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+		if (!$rc->getTitle()->userCanReadEx()) {
+			continue;
+		}
+/*op-patch|TS|2009-06-19|end*/  
+		
 		$rc->counter = $counter++;
 
 		if ( $wgShowUpdatedMarker ) {
diff -r 5876298878ad -r 2325a0cf456f includes/specials/SpecialWhatlinkshere.php
--- includes/specials/SpecialWhatlinkshere.php
+++ includes/specials/SpecialWhatlinkshere.php
@@ -238,6 +238,11 @@
 		$wgOut->addHTML( $this->listStart() );
 		foreach ( $rows as $row ) {
 			$nt = Title::makeTitle( $row->page_namespace, $row->page_title );
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+			if (!$nt->userCanReadEx()) {
+				continue;
+			}
+/*op-patch|TS|2009-06-19|end*/  
 
 			if ( $row->page_is_redirect && $level < 2 ) {
 				$wgOut->addHTML( $this->listItem( $row, $nt, true ) );
