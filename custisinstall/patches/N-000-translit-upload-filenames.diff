Index: includes/filerepo/LocalFile.php
===================================================================
--- includes/filerepo/LocalFile.php	(revision 47934)
+++ includes/filerepo/LocalFile.php	(working copy)
@@ -937,7 +937,7 @@
 	function publish( $srcPath, $flags = 0 ) {
 		$this->lock();
 		$dstRel = $this->getRel();
-		$archiveName = gmdate( 'YmdHis' ) . '!'. $this->getName();
+		$archiveName = gmdate( 'YmdHis' ) . '!'. $this->getPhys();
 		$archiveRel = 'archive/' . $this->getHashPath() . $archiveName;
 		$flags = $flags & File::DELETE_SOURCE ? LocalRepo::DELETE_SOURCE : 0;
 		$status = $this->repo->publish( $srcPath, $dstRel, $archiveRel, $flags );
@@ -1706,7 +1706,8 @@
 		$this->target = $target;
 		$this->oldHash = $this->file->repo->getHashPath( $this->file->getName() );
 		$this->newHash = $this->file->repo->getHashPath( $this->target->getDbKey() );
-		$this->oldName = $this->file->getName();
+		$this->oldName = $this->file->getPhys();
+		/* FIXME getPhysFromTitle is needed */
 		$this->newName = $this->file->repo->getNameFromTitle( $this->target );
 		$this->oldRel = $this->oldHash . $this->oldName;
 		$this->newRel = $this->newHash . $this->newName;
Index: includes/filerepo/File.php
===================================================================
--- includes/filerepo/File.php	(revision 47934)
+++ includes/filerepo/File.php	(working copy)
@@ -458,7 +458,7 @@
 		}
 		$extension = $this->getExtension();
 		list( $thumbExt, $thumbMime ) = $this->handler->getThumbType( $extension, $this->getMimeType() );
-		$thumbName = $this->handler->makeParamString( $params ) . '-' . $this->getName();
+		$thumbName = $this->handler->makeParamString( $params ) . '-' . $this->getPhys();
 		if ( $thumbExt != $extension ) {
 			$thumbName .= ".$thumbExt";
 		}
@@ -716,17 +716,29 @@
 	}
 
 	/**
+	 * Get the physical path of the file
+	 */
+	function getPhys() {
+		$name = $this->getName();
+		if (preg_match('/^(.*)\.(.*?)$/is', $name, $m))
+			$name = transliterate($m[1], transliterate_filters_get(), 'utf-8', 'utf-8').'.'.$m[2];
+		else
+			$name = transliterate($name, transliterate_filters_get(), 'utf-8', 'utf-8');
+		return $name;
+	}
+
+	/**
 	 * Get the path of the file relative to the public zone root
 	 */
 	function getRel() {
-		return $this->getHashPath() . $this->getName();
+		return $this->getHashPath() . $this->getPhys();
 	}
 
 	/**
 	 * Get urlencoded relative path of the file
 	 */
 	function getUrlRel() {
-		return $this->getHashPath() . rawurlencode( $this->getName() );
+		return $this->getHashPath() . rawurlencode( $this->getPhys() );
 	}
 
 	/** Get the relative path for an archive file */
