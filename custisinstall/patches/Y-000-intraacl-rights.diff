# HG changeset patch
# User Vitaliy Filippov <vitalif@yourcmc.ru>
# Date 1330518058 -14400
Bug 63447 - (HaloACL extension part) patch for MediaWiki right support

diff -r e1f225b28f49 -r 4d26f14d7ca7 extensions/CategoryTree/CategoryTreeFunctions.php
--- extensions/CategoryTree/CategoryTreeFunctions.php
+++ extensions/CategoryTree/CategoryTreeFunctions.php
@@ -301,7 +301,7 @@
 		global $wgLang, $wgContLang, $wgRenderHashAppend;
 		$title = self::makeTitle( $category );
 
-		if ( ! $title ) {
+		if ( ! $title || method_exists( $title, 'userCanReadEx' ) && !$title->userCanReadEx() ) {
 			return false; # TODO: error message?
 		}
 
@@ -360,7 +360,8 @@
 
 		$title = self::makeTitle( $category );
 
-		if ( $title === false || $title === null ) {
+		if ( $title === false || $title === null ||
+			method_exists( $title, 'userCanReadEx' ) && !$title->userCanReadEx() ) {
 			return false;
 		}
 
@@ -474,6 +475,10 @@
 				# TODO: translation support; ideally added to Title object
 				$t = Title::newFromRow( $row );
 			}
+/*op-patch|TS|2010-04-27|HaloACL|SafeTitle|start*/
+			if ( method_exists($t, 'userCanReadEx') && !$t->userCanReadEx() )
+				continue;
+/*op-patch|TS|2010-04-27|end*/
 
 			$cat = null;
 
@@ -527,6 +532,10 @@
 		foreach ( $res as $row ) {
 			# TODO: translation support; ideally added to Title object
 			$t = Title::newFromRow( $row );
+/*op-patch|TS|2010-04-27|HaloACL|SafeTitle|start*/
+			if ( method_exists($t, 'userCanReadEx') && !$t->userCanReadEx() )
+				continue;
+/*op-patch|TS|2010-04-27|end*/
 
 			# $trans = $title->getLocalizedText();
 			$trans = ''; # place holder for when translated titles are available
diff -r e1f225b28f49 -r 4d26f14d7ca7 extensions/DeleteBatch/DeleteBatch.body.php
--- extensions/DeleteBatch/DeleteBatch.body.php
+++ extensions/DeleteBatch/DeleteBatch.body.php
@@ -285,6 +285,15 @@
 		$page = Title::newFromText( $line );
 			if ( is_null( $page ) ) { /* invalid title? */
 				$wgOut->addWikiMsg( 'deletebatch-omitting-invalid', $line );
+		if ( !$multi ) {
+			if ( !is_null( $user ) ) {
+					$wgUser = $user;
+				}
+			}
+			return false;
+		}
+		if ( !$page->exists() ) { /* no such page? */
+			$wgOut->addWikiMsg( 'deletebatch-omitting-nonexistant', $line );
 			if ( !$multi ) {
 				if ( !is_null( $user ) ) {
 					$wgUser = $user;
@@ -292,10 +301,12 @@
 			}
 			return false;
 		}
-		if ( !$page->exists() ) { /* no such page? */
-				$wgOut->addWikiMsg( 'deletebatch-omitting-nonexistant', $line );
-			if ( !$multi ) {
-				if ( !is_null( $user ) ) {
+
+		$allowed = wfRunHooks( 'userCan', array( &$page, &$wgUser, "delete", &$result ) );
+		if( !$allowed ) {
+			$wgOut->addWikiText( wfMsg('deletebatch-permission-denied', $line) );
+			if (!$multi) {
+				if (!is_null($user)) {
 					$wgUser = $user;
 				}
 			}
diff -r e1f225b28f49 -r 4d26f14d7ca7 extensions/DeleteBatch/DeleteBatch.i18n.php
--- extensions/DeleteBatch/DeleteBatch.i18n.php
+++ extensions/DeleteBatch/DeleteBatch.i18n.php
@@ -30,6 +30,7 @@
 	'deletebatch-processing-from-form' => 'deleting pages from form',
 	'deletebatch-omitting-nonexistant' => 'Omitting non-existing page $1.',
 	'deletebatch-omitting-invalid' => 'Omitting invalid page $1.',
+	'deletebatch-permission-denied' => 'Permission denied for page $1.',
 	'deletebatch-file-bad-format' => 'The file should be plain text',
 	'deletebatch-file-missing' => 'Unable to read given file',
 	'deletebatch-select-script' => 'Delete page script',
diff -r e1f225b28f49 -r 4d26f14d7ca7 includes/CategoryPage.php
--- includes/CategoryPage.php
+++ includes/CategoryPage.php
@@ -236,6 +236,11 @@
 	 * @deprecated since 1.17 kept for compatibility, please use addSubcategoryObject instead
 	 */
 	function addSubcategory( Title $title, $sortkey, $pageLength ) {
+// <IntraACL>
+		if ( !$title->userCanReadEx() ) {
+			return;
+		}
+// </IntraACL>
 		$this->addSubcategoryObject( Category::newFromTitle( $title ), $sortkey, $pageLength );
 	}
 
@@ -293,6 +298,12 @@
 	 * Add a miscellaneous page
 	 */
 	function addPage( $title, $sortkey, $pageLength, $isRedirect = false ) {
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+		if (!$title->userCanReadEx()) {
+			return;
+		}
+/*op-patch|TS|2009-06-19|end*/  
+		
 		global $wgContLang;
 
 		$link = Linker::link( $title );
diff -r e1f225b28f49 -r 4d26f14d7ca7 includes/ChangesFeed.php
--- includes/ChangesFeed.php
+++ includes/ChangesFeed.php
@@ -49,15 +49,16 @@
 	 * @return null or true
 	 */
 	public function execute( $feed, $rows, $lastmod, $opts ) {
-		global $wgLang, $wgRenderHashAppend;
+		global $wgLang, $wgRenderHashAppend, $wgUser;
 
 		if ( !FeedUtils::checkFeedOutput( $this->format ) ) {
 			return;
 		}
 
+		$userid = $wgUser->getId();
 		$optionsHash = md5( serialize( $opts->getAllValues() ) ) . $wgRenderHashAppend;
-		$timekey = wfMemcKey( $this->type, $this->format, $wgLang->getCode(), $optionsHash, 'timestamp' );
-		$key = wfMemcKey( $this->type, $this->format, $wgLang->getCode(), $optionsHash );
+		$timekey = wfMemcKey( $this->type, $this->format, $userid, $wgLang->getCode(), $optionsHash, 'timestamp' );
+		$key = wfMemcKey( $this->type, $this->format, $userid, $wgLang->getCode(), $optionsHash );
 
 		FeedUtils::checkPurge( $timekey, $key );
 
@@ -162,6 +163,11 @@
 
 		foreach( $sorted as $obj ) {
 			$title = Title::makeTitle( $obj->rc_namespace, $obj->rc_title );
+// <IntraACL>
+			if( !$title || method_exists( $title, 'userCanReadEx' ) && !$title->userCanReadEx() ) {
+				continue;
+			}
+// </IntraACL>
 			$talkpage = MWNamespace::canTalk( $obj->rc_namespace ) ? $title->getTalkPage()->getFullUrl() : '';
 			// Skip items with deleted content (avoids partially complete/inconsistent output)
 			if( $obj->rc_deleted ) continue;
diff -r e1f225b28f49 -r 4d26f14d7ca7 includes/FeedUtils.php
--- includes/FeedUtils.php
+++ includes/FeedUtils.php
@@ -97,11 +97,8 @@
 					$actiontext,
 					$skin->formatComment( $comment ) ) ) ) . "</p>\n";
 
-		//NOTE: Check permissions for anonymous users, not current user.
-		//      No "privileged" version should end up in the cache.
-		//      Most feed readers will not log in anway.
-		$anon = new User();
-		$accErrors = $title->getUserPermissionsErrors( 'read', $anon, true );
+		// NOTE: Check permissions for current user. -- HaloACL
+		$accErrors = $title->getUserPermissionsErrors( 'read', $wgUser, true );
 
 		if( $title->getNamespace() >= 0 && !$accErrors && $newid ) {
 			if( $oldid ) {
diff -r e1f225b28f49 -r 4d26f14d7ca7 includes/LogEventsList.php
--- includes/LogEventsList.php
+++ includes/LogEventsList.php
@@ -316,6 +316,11 @@
 	public function logLine( $row ) {
 		$classes = array( 'mw-logline-' . $row->log_type );
 		$title = Title::makeTitle( $row->log_namespace, $row->log_title );
+// <IntraACL>
+		if ( !$title->userCanReadEx() ) {
+			return '';
+		}
+// </IntraACL>
 		// Log time
 		$time = $this->logTimestamp( $row );
 		// User links
diff -r e1f225b28f49 -r 4d26f14d7ca7 includes/OutputPage.php
--- includes/OutputPage.php
+++ includes/OutputPage.php
@@ -2214,7 +2214,9 @@
 		} else {
 			$titleObj = Title::newFromText( $returnto );
 		}
-		if ( !is_object( $titleObj ) ) {
+/*patch|2011-04-05|IntraACL|start*/
+		if ( !$titleObj instanceof Title || method_exists( $titleObj, 'userCanReadEx' ) && !$titleObj->userCanReadEx() ) {
+/*patch|2011-04-05|IntraACL|end*/
 			$titleObj = Title::newMainPage();
 		}
 
diff -r e1f225b28f49 -r 4d26f14d7ca7 includes/QueryPage.php
--- includes/QueryPage.php
+++ includes/QueryPage.php
@@ -560,6 +560,12 @@
 			# $res might contain the whole 1,000 rows, so we read up to
 			# $num [should update this to use a Pager]
 			for ( $i = 0; $i < $num && $row = $dbr->fetchObject( $res ); $i++ ) {
+// <IntraACL>
+				$title = Title::makeTitleSafe( $row->namespace, $row->title );
+				if ( !$title || !$title->userCanReadEx() ) {
+					continue;
+				}
+// </IntraACL>
 				$line = $this->formatResult( $skin, $row );
 				if ( $line ) {
 					$attr = ( isset( $row->usepatrol ) && $row->usepatrol && $row->patrolled == 0 )
diff -r e1f225b28f49 -r 4d26f14d7ca7 includes/Title.php
--- includes/Title.php
+++ includes/Title.php
@@ -103,7 +103,9 @@
 		$t = new Title();
 		$t->mDbkeyform = $key;
 		if ( $t->secureAndSplit() ) {
-			return $t;
+// <IntraACL>
+			return $t->checkAccessControl();
+// </IntraACL>
 		} else {
 			return null;
 		}
@@ -156,7 +158,10 @@
 				$cachedcount++;
 				Title::$titleCache[$text] =& $t;
 			}
-			return $t;
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+			return $t->checkAccessControl();
+/*op-patch|TS|2009-06-19|end*/  
+// Preplaced by patch			return $t;
 		} else {
 			$ret = null;
 			return $ret;
@@ -191,7 +196,9 @@
 
 		$t->mDbkeyform = str_replace( ' ', '_', $url );
 		if ( $t->secureAndSplit() ) {
-			return $t;
+// <IntraACL>
+			return $t->checkAccessControl();
+// </IntraACL>
 		} else {
 			return null;
 		}
@@ -303,7 +310,11 @@
 		$t->mArticleID = ( $ns >= 0 ) ? -1 : 0;
 		$t->mUrlform = wfUrlencode( $t->mDbkeyform );
 		$t->mTextform = str_replace( '_', ' ', $title );
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+		$t = $t->checkAccessControl();
 		return $t;
+/*op-patch|TS|2009-06-19|end*/  
+// Preplaced by patch		return $t;
 	}
 
 	/**
@@ -321,7 +332,9 @@
 		$t = new Title();
 		$t->mDbkeyform = Title::makeName( $ns, $title, $fragment, $interwiki );
 		if ( $t->secureAndSplit() ) {
-			return $t;
+// <IntraACL>
+			return $t->checkAccessControl();
+// </IntraACL>
 		} else {
 			return null;
 		}
@@ -4261,6 +4274,7 @@
 
 		return $types;
 	}
+
 	/**
 	 * Get a filtered list of all restriction types supported by this wiki.
 	 * @param bool $exists True to get all restriction types that apply to
@@ -4341,4 +4355,104 @@
 		wfRunHooks( 'PageContentLanguage', array( $this, &$pageLang, $wgLang ) );
 		return wfGetLangObj( $pageLang );
 	}
+
+// <IntraACL>
+	
+	/**
+	 * This function is called from the patches for HaloACL for secure listings
+	 * (e.g. Special:AllPages). It checks, whether the current user is allowed
+	 * to read the article for this title object. For normal pages this is
+	 * evaluate in the method <userCanRead>.
+	 * However, the special pages that generate listings, often create title
+	 * objects before the can check their accessibility. The fallback mechanism
+	 * of HaloACL creates the title "Permission denied" for the article that
+	 * must not be accessed. The listings would then show a link to "Permission
+	 * denied". So this function returns "false" for the title "Permission denied"
+	 * as well.
+	 *
+	 * @return
+	 * 		true, if this title can be read
+	 * 		false, if the title is protected or "Permission denied".
+	 */
+	public function userCanReadEx( $otherUser = NULL ) {
+		if ( !defined( 'HACL_HALOACL_VERSION' ) ) {
+			// IntraACL is disabled
+			return true;
+		}
+		global $haclgContLang;
+		if ( $this->mTextform === $haclgContLang->getPermissionDeniedPage() ) {
+			// Special handling of "Permission denied" page
+			return false;
+		}
+		if ( $otherUser ) {
+			$canRead = false;
+			$status = HACLEvaluator::userCan( $this, $otherUser, 'read', $canRead );
+			return $canRead;
+		}
+		return $this->userCanRead();
+	}
+
+	/**
+	 * This function checks, if this title is accessible for the action of the
+	 * current request. If the action is unknown it is assumed to be "read".
+	 * If the title is not accessible, the new title "Permission denied" is
+	 * returned. This is a fallback to protect titles if all other security
+	 * patches fail.
+	 *
+	 * While a page is rendered, the same title is often checked several times.
+	 * To speed things up, the results of an accessibility check are internally
+	 * cached.
+	 *
+	 * This function can be disabled in HACL_Initialize.php or LocalSettings.php
+	 * by setting the variable $haclgEnableTitleCheck = false.
+	 *
+	 * @return
+	 * 		$this, if access is granted on this title or
+	 * 		the title for "Permission denied" if not.
+	 */
+	private function checkAccessControl() {
+		if ( !defined( 'HACL_HALOACL_VERSION' ) ) {
+			// IntraACL is disabled or not fully initialized
+			return $this;
+		}
+		global $haclgEnableTitleCheck;
+		if ( isset( $haclgEnableTitleCheck ) && $haclgEnableTitleCheck === false ) {
+			return $this;
+		}
+		static $permissionCache = array();
+		
+		$action = 'read';
+		$index = $this->getFullText().'-'.$action;
+		$allowed = @$permissionCache[$index];
+		if ( !isset( $allowed ) ) {
+			switch ( $action ) {
+				case 'create':
+				case 'move':
+				case 'delete':
+					$allowed = $this->userCan($action);
+					break;
+				case 'edit':
+					// If the article does not exist and edit right was requested,
+					// check for create right.
+					$allowed = $this->userCan($this->exists() ? 'edit' : 'create');
+					break;
+				default:
+					// If the user has no read access to a non-existing page,
+					// but has the right to create it - allow him to "read" it
+					$allowed = $this->userCanRead() || !$this->exists() && $this->userCan('create');
+			}
+			$permissionCache[$index] = $allowed;
+		}
+		if ( $allowed === false ) {
+			global $haclgContLang;
+			$etc = $haclgEnableTitleCheck;
+			$haclgEnableTitleCheck = false;
+			$t = Title::newFromURL($haclgContLang->getPermissionDeniedPage());
+			$haclgEnableTitleCheck = $etc;
+			return $t;
+		}
+		return $this;
+	}
+// </IntraACL>
+
 }
diff -r e1f225b28f49 -r 4d26f14d7ca7 includes/User.php
--- includes/User.php
+++ includes/User.php
@@ -540,6 +540,12 @@
 	public static function isValidUserName( $name ) {
 		global $wgContLang, $wgMaxNameChars;
 
+		# Disable HaloACL title check as the main and/or
+		# user namespaces may be protected
+		if ( defined( 'HACL_HALOACL_VERSION' ) ) {
+			$hacl = haclfDisableTitlePatch();
+		}
+
 		if ( $name == ''
 		|| User::isIP( $name )
 		|| strpos( $name, '/' ) !== false
@@ -547,6 +553,9 @@
 		|| $name != $wgContLang->ucfirst( $name ) ) {
 			wfDebugLog( 'username', __METHOD__ .
 				": '$name' invalid due to empty, IP, slash, length, or lowercase" );
+			if ( defined( 'HACL_HALOACL_VERSION' ) ) {
+				haclfRestoreTitlePatch( $hacl );
+			}
 			return false;
 		}
 
@@ -558,6 +567,9 @@
 			|| strcmp( $name, $parsed->getPrefixedText() ) ) {
 			wfDebugLog( 'username', __METHOD__ .
 				": '$name' invalid due to ambiguous prefixes" );
+			if ( defined( 'HACL_HALOACL_VERSION' ) ) {
+				haclfRestoreTitlePatch( $hacl );
+			}
 			return false;
 		}
 
@@ -574,9 +586,15 @@
 		if( preg_match( $unicodeBlacklist, $name ) ) {
 			wfDebugLog( 'username', __METHOD__ .
 				": '$name' invalid due to blacklisted characters" );
+			if ( defined( 'HACL_HALOACL_VERSION' ) ) {
+				haclfRestoreTitlePatch( $hacl );
+			}
 			return false;
 		}
 
+		if ( defined( 'HACL_HALOACL_VERSION' ) ) {
+			haclfRestoreTitlePatch( $hacl );
+		}
 		return true;
 	}
 
@@ -747,6 +765,14 @@
 	 * @return bool|string
 	 */
 	public static function getCanonicalName( $name, $validate = 'valid' ) {
+// <IntraACL>
+		# Disable IntraACL title check as the main and/or
+		# user namespaces may be protected
+		if ( defined( 'HACL_HALOACL_VERSION' ) ) {
+			$hacl = haclfDisableTitlePatch();
+		}
+// </IntraACL>
+
 		# Force usernames to capital
 		global $wgContLang;
 		$name = $wgContLang->ucfirst( $name );
@@ -762,6 +788,9 @@
 			Title::newFromText( $name ) : Title::makeTitle( NS_USER, $name );
 		# Check for invalid titles
 		if( is_null( $t ) ) {
+			if ( defined( 'HACL_HALOACL_VERSION' ) ) {
+				haclfRestoreTitlePatch( $hacl );
+			}
 			return false;
 		}
 
@@ -790,6 +819,9 @@
 			default:
 				throw new MWException( 'Invalid parameter value for $validate in ' . __METHOD__ );
 		}
+		if ( defined( 'HACL_HALOACL_VERSION' ) ) {
+			haclfRestoreTitlePatch( $hacl );
+		}
 		return $name;
 	}
 
@@ -3311,7 +3343,13 @@
 	 */
 	protected function getTokenUrl( $page, $token ) {
 		// Hack to bypass localization of 'Special:'
+		if ( defined( 'HACL_HALOACL_VERSION' ) ) {
+			$hacl = haclfDisableTitlePatch();
+		}
 		$title = Title::makeTitle( NS_MAIN, "Special:$page/$token" );
+		if ( defined( 'HACL_HALOACL_VERSION' ) ) {
+			haclfRestoreTitlePatch($hacl);
+		}
 		return $title->getCanonicalUrl();
 	}
 
diff -r e1f225b28f49 -r 4d26f14d7ca7 includes/UserMailer.php
--- includes/UserMailer.php
+++ includes/UserMailer.php
@@ -470,7 +470,12 @@
 		global $wgUsersNotifiedOnAllChanges;
 		foreach ( $wgUsersNotifiedOnAllChanges as $name ) {
 			$user = User::newFromName( $name );
-			$this->compose( $user );
+/*op-patch|TS|2011-02-09|IntraACL|start*/
+			if ( !method_exists( $title, 'userCanReadEx' ) || $title->userCanReadEx( $user ) ) {
+				// Check IntraACL read access
+				$this->compose( $user );
+			}
+/*op-patch|TS|2011-02-09|end*/
 		}
 
 		$this->sendMails();
diff -r e1f225b28f49 -r 4d26f14d7ca7 includes/parser/Parser.php
--- includes/parser/Parser.php
+++ includes/parser/Parser.php
@@ -3101,6 +3101,17 @@
 				$ns = $this->mTitle->getNamespace();
 			}
 			$title = Title::newFromText( $part1, $ns );
+			if ( method_exists( $title, 'userCanReadEx' ) && !$title->userCanReadEx() ) {
+				global $haclgInclusionDeniedMessage;
+				$title = NULL;
+				if ( $haclgInclusionDeniedMessage ) {
+					$found = true;
+					$text = wfMsg( $haclgInclusionDeniedMessage );
+				} elseif ( $haclgInclusionDeniedMessage === '' ) {
+					$found = true;
+					$text = '';
+				}
+			}
 			if ( $title ) {
 				$titleText = $title->getPrefixedText();
 				# Check for language variants if the template is not found
diff -r e1f225b28f49 -r 4d26f14d7ca7 includes/specials/SpecialAllpages.php
--- includes/specials/SpecialAllpages.php
+++ includes/specials/SpecialAllpages.php
@@ -336,6 +336,11 @@
 				$out = Xml::openElement( 'table', array( 'class' => 'mw-allpages-table-chunk' ) );
 				while( ( $n < $this->maxPerPage ) && ( $s = $res->fetchObject() ) ) {
 					$t = Title::newFromRow( $s );
+// <IntraACL>
+					if ( $t && !$t->userCanReadEx() ) {
+						continue;
+					}
+// </IntraACL>
 					if( $t ) {
 						$link = ( $s->page_is_redirect ? '<div class="allpagesredirect">' : '' ) .
 							$sk->link( $t ) .
diff -r e1f225b28f49 -r 4d26f14d7ca7 includes/specials/SpecialListredirects.php
--- includes/specials/SpecialListredirects.php
+++ includes/specials/SpecialListredirects.php
@@ -108,6 +108,11 @@
 		# Find out where the redirect leads
 		$target = $this->getRedirectTarget( $result );
 		if( $target ) {
+// <IntraACL>
+			if ( !$target->userCanReadEx() ) {
+				return '';
+			}
+// </IntraACL>
 			global $wgLang;
 			# Make a link to the destination page
 			$arr = $wgLang->getArrow() . $wgLang->getDirMark();
diff -r e1f225b28f49 -r 4d26f14d7ca7 includes/specials/SpecialNewpages.php
--- includes/specials/SpecialNewpages.php
+++ includes/specials/SpecialNewpages.php
@@ -305,6 +305,11 @@
 		$dm = $wgLang->getDirMark();
 
 		$title = Title::makeTitleSafe( $result->rc_namespace, $result->rc_title );
+// <IntraACL>
+		if ( !$title->userCanReadEx() ) {
+			return '';
+		}
+// </IntraACL>
 		$time = Html::element( 'span', array( 'class' => 'mw-newpages-time' ),
 			$wgLang->timeAndDate( $result->rc_timestamp, true )
 		);
diff -r e1f225b28f49 -r 4d26f14d7ca7 includes/specials/SpecialPrefixindex.php
--- includes/specials/SpecialPrefixindex.php
+++ includes/specials/SpecialPrefixindex.php
@@ -167,6 +167,11 @@
 
 				while( ( $n < $this->maxPerPage ) && ( $s = $res->fetchObject() ) ) {
 					$t = Title::makeTitle( $s->page_namespace, $s->page_title );
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+					if ($t && !$t->userCanReadEx()) {
+						continue; 
+					}
+/*op-patch|TS|2009-06-19|end*/  
 					if( $t ) {
 						$link = ($s->page_is_redirect ? '<div class="allpagesredirect">' : '' ) .
 							$sk->linkKnown(
diff -r e1f225b28f49 -r 4d26f14d7ca7 includes/specials/SpecialRandompage.php
--- includes/specials/SpecialRandompage.php
+++ includes/specials/SpecialRandompage.php
@@ -68,6 +68,10 @@
 			$wgOut->addWikiMsg( strtolower( $this->mName ) . '-nopages',
 				$this->getNsList(), count( $this->namespaces ) );
 			return;
+		} elseif ( method_exists( $title, 'userCanReadEx' ) && !$title->userCanReadEx() ) {
+			$article = new Article( $title );
+			$article->view();
+			return;
 		}
 
 		$redirectParam = $this->isRedirect() ? array( 'redirect' => 'no' ) : array();
diff -r e1f225b28f49 -r 4d26f14d7ca7 includes/specials/SpecialRecentchanges.php
--- includes/specials/SpecialRecentchanges.php
+++ includes/specials/SpecialRecentchanges.php
@@ -482,10 +482,15 @@
 
 		$s = $list->beginRecentChangesList();
 		foreach( $rows as $obj ) {
+// <IntraACL>
+			$rc = RecentChange::newFromRow( $obj );
+			if ( !$rc->getTitle()->userCanReadEx() ) {
+				continue;
+			}
+// </IntraACL>
 			if( $limit == 0 ) {
 				break;
 			}
-			$rc = RecentChange::newFromRow( $obj );
 			$rc->counter = $counter++;
 			# Check if the page has been updated since the last visit
 			if( $wgShowUpdatedMarker && !empty( $obj->wl_notificationtimestamp ) ) {
diff -r e1f225b28f49 -r 4d26f14d7ca7 includes/specials/SpecialSearch.php
--- includes/specials/SpecialSearch.php
+++ includes/specials/SpecialSearch.php
@@ -480,7 +480,14 @@
 		}
 		$out .= "<ul class='mw-search-results'>\n";
 		while( $result = $matches->next() ) {
-			$out .= $this->showHit( $result, $terms );
+/*op-patch|TS|2011-02-08|HaloACL|SafeTitle|start*/
+			if (($result->getTitle() != NULL) 
+			    && ($result->getTitle()->userCanReadEx())) {
+/*op-patch|TS|2011-02-08|end*/  
+				$out .= $this->showHit( $result, $terms );
+/*op-patch|TS|2011-02-08|HaloACL|SafeTitle|start*/
+			}
+/*op-patch|TS|2011-02-08|end*/  
 		}
 		$out .= "</ul>\n";
 
diff -r e1f225b28f49 -r 4d26f14d7ca7 includes/specials/SpecialUserlogin.php
--- includes/specials/SpecialUserlogin.php
+++ includes/specials/SpecialUserlogin.php
@@ -826,7 +826,9 @@
 			$this->displaySuccessfulLogin( 'loginsuccess', $injected_html );
 		} else {
 			$titleObj = Title::newFromText( $this->mReturnTo );
-			if ( !$titleObj instanceof Title ) {
+/*patch|2011-04-05|IntraACL|start*/
+			if ( !$titleObj instanceof Title || method_exists( $titleObj, 'userCanReadEx' ) && !$titleObj->userCanReadEx() ) {
+/*patch|2011-04-05|IntraACL|end*/
 				$titleObj = Title::newMainPage();
 			}
 			$redirectUrl = $titleObj->getFullURL( $this->mReturnToQuery );
diff -r e1f225b28f49 -r 4d26f14d7ca7 includes/specials/SpecialWatchlist.php
--- includes/specials/SpecialWatchlist.php
+++ includes/specials/SpecialWatchlist.php
@@ -388,6 +388,11 @@
 		foreach ( $res as $obj ) {
 			# Make RC entry
 			$rc = RecentChange::newFromRow( $obj );
+// <IntraACL>
+			if ( !$rc->getTitle()->userCanReadEx() ) {
+				continue;
+			}
+// </IntraACL>
 			$rc->counter = $counter++;
 
 			if ( $wgShowUpdatedMarker ) {
diff -r e1f225b28f49 -r 4d26f14d7ca7 includes/specials/SpecialWhatlinkshere.php
--- includes/specials/SpecialWhatlinkshere.php
+++ includes/specials/SpecialWhatlinkshere.php
@@ -246,6 +246,11 @@
 		$out->addHTML( $this->listStart( $level ) );
 		foreach ( $rows as $row ) {
 			$nt = Title::makeTitle( $row->page_namespace, $row->page_title );
+/*op-patch|TS|2009-06-19|HaloACL|SafeTitle|start*/
+			if (!$nt->userCanReadEx()) {
+				continue;
+			}
+/*op-patch|TS|2009-06-19|end*/  
 
 			if ( $row->page_is_redirect && $level < 2 ) {
 				$out->addHTML( $this->listItem( $row, $nt, true ) );
