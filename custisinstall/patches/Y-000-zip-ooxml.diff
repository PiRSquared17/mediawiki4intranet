# HG changeset patch
# User Vitaliy Filippov <vitalif@yourcmc.ru>
# Date 1303910158 -14400
Bug 79501 - Determine OOXML types correctly, allow external mime magic for invalid zip files

diff -r 45da8fc662c9 -r 2f7db1b257c1 includes/MimeMagic.php
--- includes/MimeMagic.php
+++ includes/MimeMagic.php
@@ -11,6 +11,18 @@
 define('MM_WELL_KNOWN_MIME_TYPES',<<<END_STRING
 application/ogg ogg ogm ogv
 application/pdf pdf
+application/vnd.ms-word.document.macroEnabled.12 docm
+application/vnd.openxmlformats-officedocument.wordprocessingml.document docx
+application/vnd.ms-word.template.macroEnabled.12 dotm
+application/vnd.openxmlformats-officedocument.wordprocessingml.template dotx
+application/vnd.ms-powerpoint.slideshow.macroEnabled.12 ppsm
+application/vnd.openxmlformats-officedocument.presentationml.slideshow ppsx
+application/vnd.ms-powerpoint.presentation.macroEnabled.12 pptm
+application/vnd.openxmlformats-officedocument.presentationml.presentation pptx
+application/vnd.ms-excel.sheet.binary.macroEnabled.12 xlsb
+application/vnd.ms-excel.sheet.macroEnabled.12 xlsm
+application/vnd.openxmlformats-officedocument.spreadsheetml.sheet xlsx
+application/vnd.ms-xpsdocument xps
 application/vnd.oasis.opendocument.chart odc
 application/vnd.oasis.opendocument.chart-template otc
 application/vnd.oasis.opendocument.formula odf
@@ -548,6 +560,8 @@
 		// Check for ZIP (before getimagesize)
 		if ( strpos( $tail, "PK\x05\x06" ) !== false ) {
 			wfDebug( __METHOD__.": ZIP header present at end of $file\n" );
+			if ( function_exists( 'zip_open' ) )
+				return $this->detectZipTypeWithUncompress( $file );
 			return $this->detectZipType( $head );
 		}
 
@@ -571,6 +585,37 @@
 		return false;
 	}
 	
+	function detectZipTypeWithUncompress( $filename )
+	{
+		if ( !is_resource( $zip = zip_open( $filename ) ) )
+		{
+			// Allow external type detection
+			return false;
+		}
+		// Check for OpenDocument and OOXML formats
+		do
+		{
+			$entry = zip_read( $zip );
+			if ( $entry )
+				$fn = strtolower( zip_entry_name( $entry ) );
+		} while( $entry && $fn != 'mimetype' && $fn != '[content_types].xml');
+		if ( $entry && zip_entry_open( $zip, $entry, 'r' ) )
+		{
+			$n = zip_entry_filesize( $entry );
+			$type = zip_entry_read( $entry, $n > 0x10000 ? 0x10000 : $n );
+			if ( $fn == 'mimetype' )
+				$type = $fn.$type;
+			zip_entry_close( $entry );
+		}
+		zip_close( $zip );
+		if ( !$type )
+		{
+			// Allow external type detection
+			return false;
+		}
+		return $this->detectZipType( $type );
+	}
+	
 	/**
 	 * Detect application-specific file type of a given ZIP file from its
 	 * header data.  Currently works for OpenDocument types...
@@ -600,16 +645,31 @@
 
 		// http://lists.oasis-open.org/archives/office/200505/msg00006.html
 		$types = '(?:' . implode( '|', $opendocTypes ) . ')';
-		$opendocRegex = "/^mimetype(application\/vnd\.oasis\.opendocument\.$types)/";
+		$openxmlRegex =
+			'application\/vnd\.ms-word\.document\.macroEnabled\.12|'.
+			'application\/vnd\.openxmlformats-officedocument\.wordprocessingml\.document|'.
+			'application\/vnd\.ms-word\.template\.macroEnabled\.12|'.
+			'application\/vnd\.openxmlformats-officedocument\.wordprocessingml\.template|'.
+			'application\/vnd\.ms-powerpoint\.slideshow\.macroEnabled\.12|'.
+			'application\/vnd\.openxmlformats-officedocument\.presentationml\.slideshow|'.
+			'application\/vnd\.ms-powerpoint\.presentation\.macroEnabled\.12|'.
+			'application\/vnd\.openxmlformats-officedocument\.presentationml\.presentation|'.
+			'application\/vnd\.ms-excel\.sheet\.binary\.macroEnabled\.12|'.
+			'application\/vnd\.ms-excel\.sheet\.macroEnabled\.12|'.
+			'application\/vnd\.openxmlformats-officedocument\.spreadsheetml\.sheet|'.
+			'application\/vnd\.ms-xpsdocument';
+		$opendocRegex = "/^mimetype(application\/vnd\.oasis\.opendocument\.$types)|ContentType=[\"\']?($openxmlRegex)/";
 		wfDebug( __METHOD__.": $opendocRegex\n" );
 		
-		if( preg_match( $opendocRegex, substr( $header, 30 ), $matches ) ) {
+		if( preg_match( $opendocRegex, $header, $matches ) ) {
 			$mime = $matches[1];
+			if ( !$mime )
+				$mime = $matches[2];
 			wfDebug( __METHOD__.": detected $mime from ZIP archive\n" );
 			return $mime;
 		} else {
 			wfDebug( __METHOD__.": unable to identify type of ZIP archive\n" );
-			return 'application/zip';
+			return false;
 		}
 	}
 
