Index: extensions/CategoryTree/CategoryTree.php
===================================================================
--- extensions/CategoryTree/CategoryTree.php	(revision 52733)
+++ extensions/CategoryTree/CategoryTree.php	(working copy)
@@ -351,7 +351,7 @@
 * Hook callback that injects messages and things into the <head> tag
 * Does nothing if $parserOutput->mCategoryTreeTag is not set
 */
-function efCategoryTreeParserOutput( &$outputPage, &$parserOutput )  {
+function efCategoryTreeParserOutput( $outputPage, $parserOutput )  {
 	if ( !empty( $parserOutput->mCategoryTreeTag ) ) {
 		CategoryTree::setHeaders( $outputPage );
 	}
@@ -361,7 +361,7 @@
 /**
  * ArticleFromTitle hook, override category page handling
  */
-function efCategoryTreeArticleFromTitle( &$title, &$article ) {
+function efCategoryTreeArticleFromTitle( $title, $article ) {
 	if ( $title->getNamespace() == NS_CATEGORY ) {
 		$article = new CategoryTreeCategoryPage( $title );
 	}
Index: extensions/Wikilog/Wikilog.php
===================================================================
--- extensions/Wikilog/Wikilog.php	(revision 426)
+++ extensions/Wikilog/Wikilog.php	(working copy)
@@ -270,7 +270,7 @@
 		global $wgWikilogNamespaces;
 		if (!$title)
 			return NULL;
-		$ns = Namespace::getSubject( $title->getNamespace() );
+		$ns = MWNamespace::getSubject( $title->getNamespace() );
 		if ( in_array( $ns, $wgWikilogNamespaces ) ) {
 			return new WikilogInfo( $title );
 		} else {
@@ -299,7 +299,7 @@
 	 * @param $title Title object.
 	 */
 	function __construct( $title ) {
-		$ns = Namespace::getSubject( $title->getNamespace() );
+		$ns = MWNamespace::getSubject( $title->getNamespace() );
 		if ( strpos( $title->getText(), '/' ) !== false ) {
 			list( $this->mWikilogName, $this->mItemName ) =
 				explode( '/', $title->getText(), 2 );
Index: languages/Language.php
===================================================================
--- languages/Language.php	(revision 47934)
+++ languages/Language.php	(working copy)
@@ -1672,7 +1672,7 @@
 	}
 
 	# Fill a MagicWord object with data from here
-	function getMagic( &$mw ) {
+	function getMagic( $mw ) {
 		if ( !$this->mMagicHookDone ) {
 			$this->mMagicHookDone = true;
 			wfRunHooks( 'LanguageGetMagic', array( &$this->mMagicExtensions, $this->getCode() ) );
