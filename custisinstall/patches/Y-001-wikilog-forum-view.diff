# HG changeset patch
# User Vitaliy Filippov <vitali@st-filippov.office.custis.ru>
# Date 1278338885 -14400
Bug 65519 - Wikilog forum view

diff -r 0018f1f35e99 -r d0a6e7a07224 extensions/Wikilog/Wikilog.i18n.php
--- extensions/Wikilog/Wikilog.i18n.php
+++ extensions/Wikilog/Wikilog.i18n.php
@@ -61,6 +61,8 @@
 	'wikilog-draft-title-mark' => '(draft)',
 	'wikilog-anonymous-mark' => '(anonymous)',
 
+	'wikilog-last-update' => 'Last Update',
+
 	# Pager strings
 	'wikilog-pager-newest' => 'newest',
 	'wikilog-pager-oldest' => 'oldest',
@@ -97,7 +99,7 @@
 	# Comments
 	'wikilog-comment-header' => '',
 	'wikilog-comment-footer' => '— $2 • $5 $6',
-	'wikilog-comment-permalink' => '$1 at $2',
+	'wikilog-comment-permalink' => '{{#if:$3|$1 at $2|<b>$1 at $2 (unread)</b>}}',
 	'wikilog-comment-note-item' => 'posted to $1',
 	'wikilog-comment-note-edited' => 'last edited on $1 at $2',
 	'wikilog-comment-anonsig' => '$3 (anonymous)',
@@ -4894,6 +4896,7 @@
 	'wikilog-title' => 'Название',
 	'wikilog-actions' => 'Действия',
 	'wikilog-comments' => 'Комментарии',
+	'wikilog-last-update' => 'Последнее обновление',
 	'wikilog-replies' => 'Ответы',
 	'wikilog-view-archives' => 'Архивы',
 	'wikilog-view-summary' => 'Описание',
@@ -4918,7 +4921,7 @@
 	'wikilog-edit-signpub' => 'Подписать и опубликовать эту статью',
 	'wikilog-edit-signpub-tooltip' => 'Вызывает подписывание и опубликование статьи в викилоге при сохранении.
 Снимите этот флажок, чтобы оставить статью в качестве черновика.',
-	'wikilog-comment-permalink' => '$1 в $2',
+	'wikilog-comment-permalink' => '{{#if:$3|$1 в $2|<b>$1 в $2 (не прочитан)</b>}}',
 	'wikilog-comment-note-item' => 'размещён в $1',
 	'wikilog-comment-note-edited' => 'последняя правка $1 в $2',
 	'wikilog-comment-anonsig' => '$3 (анонимно)',
diff -r 0018f1f35e99 -r d0a6e7a07224 extensions/Wikilog/WikilogComment.php
--- extensions/Wikilog/WikilogComment.php
+++ extensions/Wikilog/WikilogComment.php
@@ -71,6 +71,7 @@
 	public  $mCommentTitle  = null;		///< Comment page title.
 	public  $mCommentRev	= null;		///< Comment revision id.
 	public  $mText			= null;		///< Comment text.
+	public  $mVisited		= null;		///< Is comment already visited by current user?
 
 	/**
 	 * Whether the text was changed, and thus a database update is required.
@@ -310,6 +311,7 @@
 	 * @return New WikilogComment object.
 	 */
 	public static function newFromRow( &$item, $row ) {
+		global $wgUser;
 		$comment = new WikilogComment( $item );
 		$comment->mID           = intval( $row->wlc_id );
 		$comment->mParent       = intval( $row->wlc_parent );
@@ -321,6 +323,7 @@
 		$comment->mTimestamp    = wfTimestamp( TS_MW, $row->wlc_timestamp );
 		$comment->mUpdated      = wfTimestamp( TS_MW, $row->wlc_updated );
 		$comment->mCommentPage  = $row->wlc_comment_page;
+		$comment->mVisited      = $wgUser->getID() ? $row->_wlc_visited : true;
 
 		# This information may not be available for deleted comments.
 		if ( $row->wlc_page_title && $row->wlc_page_latest ) {
@@ -838,7 +841,7 @@
 				$title = $comment->mCommentTitle;
 			}
 			return $this->mSkin->link( $title,
-				wfMsg( 'wikilog-comment-permalink', $date, $time ),
+				wfMsgExt( 'wikilog-comment-permalink', array( 'parseinline' ), $date, $time, $comment->mVisited ? 1 : NULL ),
 				array( 'title' => wfMsg( 'permalink' ) )
 			);
 		} else {
diff -r 0018f1f35e99 -r d0a6e7a07224 extensions/Wikilog/WikilogCommentsPage.php
--- extensions/Wikilog/WikilogCommentsPage.php
+++ extensions/Wikilog/WikilogCommentsPage.php
@@ -106,7 +106,7 @@
 	 * Handler for action=view requests.
 	 */
 	public function view() {
-		global $wgRequest, $wgOut;
+		global $wgRequest, $wgOut, $wgUser;
 
 		if ( $wgRequest->getVal( 'diff' ) ) {
 			# Ignore comments if diffing.
@@ -167,6 +167,11 @@
 		# Retrieve comments (or replies) from database and display them.
 		$this->viewComments( $query );
 
+		# Update last visit
+		if ( $this->mItem && $wgUser->getID() ) {
+			$this->mItem->updateLastVisit();
+		}
+
 		# Add feed links.
 		$wgOut->setSyndicated();
 	}
diff -r 0018f1f35e99 -r d0a6e7a07224 extensions/Wikilog/WikilogHooks.php
--- extensions/Wikilog/WikilogHooks.php
+++ extensions/Wikilog/WikilogHooks.php
@@ -365,6 +365,7 @@
 
 		if ( $wgDBtype == 'mysql' ) {
 			$wgExtNewTables[] = array( "wikilog_wikilogs", "{$dir}wikilog-tables.sql" );
+			$wgExtNewTables[] = array( "wikilog_visits", "{$dir}archives/patch-visits.sql" );
 			$wgExtNewIndexes[] = array( "wikilog_comments", "wlc_timestamp", "{$dir}archives/patch-comments-indexes.sql" );
 		} else {
 			// TODO: PostgreSQL, SQLite, etc...
diff -r 0018f1f35e99 -r d0a6e7a07224 extensions/Wikilog/WikilogItem.php
--- extensions/Wikilog/WikilogItem.php
+++ extensions/Wikilog/WikilogItem.php
@@ -376,4 +376,24 @@
 			'wlp_num_comments'
 		);
 	}
+
+	/**
+	 * Update last visit date of post discussion page
+	 * Must be set to $timestamp when used by WikilogItemPage
+	 */
+	public function updateLastVisit( $timestamp = NULL )
+	{
+		global $wgUser;
+		if ( !$wgUser->getID() )
+			return;
+		$timestamp = wfTimestamp( TS_MW, $timestamp );
+		$dbw = wfGetDB( DB_MASTER );
+		$where = array( 'wlv_post' => $this->getID(), 'wlv_user' => $wgUser->getID() );
+		$set = array( 'wlv_date' => $timestamp );
+		$last = $dbw->selectField( 'wikilog_visits', 'wlv_date', $where, __FUNCTION__, array('FOR UPDATE'));
+		if ( !$last )
+			$dbw->insert( 'wikilog_visits', $where + $set );
+		elseif ( $last < $timestamp)
+			$dbw->update( 'wikilog_visits', $set, $where, __METHOD__ );
+	}
 }
diff -r 0018f1f35e99 -r d0a6e7a07224 extensions/Wikilog/WikilogItemPage.php
--- extensions/Wikilog/WikilogItemPage.php
+++ extensions/Wikilog/WikilogItemPage.php
@@ -91,6 +91,11 @@
 			# Display article.
 			parent::view();
 
+			# Update last visit
+			if ( $this->mItem && $wgUser->getID() ) {
+				$this->mItem->updateLastVisit( $this->mItem->getPublishDate() );
+			}
+
 			# Override page title.
 			# NOTE (MW1.16+): Must come after parent::view().
 			$fullPageTitle = wfMsg( 'wikilog-title-item-full',
diff -r 0018f1f35e99 -r d0a6e7a07224 extensions/Wikilog/WikilogItemPager.php
--- extensions/Wikilog/WikilogItemPager.php
+++ extensions/Wikilog/WikilogItemPager.php
@@ -380,6 +380,8 @@
 	function __construct( WikilogItemQuery $query, $including = false ) {
 		# WikilogItemQuery object drives our queries.
 		$this->mQuery = $query;
+		$this->mQuery->setOption( 'last-comment-timestamp', true );
+		$this->mQuery->setOption( 'last-visit-date', true );
 		$this->mIncluding = $including;
 
 		# Parent constructor.
@@ -411,6 +413,7 @@
 			'wlp_updated',
 			'wlw_title',
 			'wlp_title',
+			'_wlp_last_comment_timestamp',
 		);
 		return in_array( $field, $sortableFields );
 	}
@@ -449,7 +452,7 @@
 	}
 
 	function formatValue( $name, $value ) {
-		global $wgLang;
+		global $wgLang, $wgUser;
 
 		switch ( $name ) {
 			case 'wlp_pubdate':
@@ -459,6 +462,12 @@
 				}
 				return $s;
 
+			case '_wlp_last_comment_timestamp':
+				$s = $wgLang->timeanddate( $value, true );
+				if ( $wgUser->getID() && $this->mCurrentRow->_wlp_last_visit_date < $value )
+					$s = Xml::wrapClass( $s, 'wl-unread' );
+				return $s;
+
 			case 'wlp_updated':
 				return $value;
 
@@ -523,6 +532,9 @@
 			$fields['wlp_num_comments']	= wfMsgHtml( 'wikilog-comments' );
 
 		$fields['_wl_actions']			= wfMsgHtml( 'wikilog-actions' );
+
+		$fields['_wlp_last_comment_timestamp'] = wfMsgHtml( 'wikilog-last-update' );
+
 		return $fields;
 	}
 
diff -r 0018f1f35e99 -r d0a6e7a07224 extensions/Wikilog/WikilogQuery.php
--- extensions/Wikilog/WikilogQuery.php
+++ extensions/Wikilog/WikilogQuery.php
@@ -365,14 +365,22 @@
 			$q_conds[] = 'wlp_pubdate < ' . $db->addQuotes( $this->mDate->end );
 		}
 
-		# Add last comment timestamp, used in syndication feeds.
+		# Add last comment timestamp, used in syndication feeds and archive pager.
 		if ( $this->getOption( 'last-comment-timestamp' ) ) {
 			$q_tables[] = 'wikilog_comments';
-			$q_fields[] = 'MAX(wlc_updated) AS _wlp_last_comment_timestamp';
+			$q_fields[] = 'IFNULL(MAX(wlc_updated), wlp_pubdate) AS _wlp_last_comment_timestamp';
 			$q_joins['wikilog_comments'] = array( 'LEFT JOIN', 'wlp_page = wlc_post' );
 			$q_options['GROUP BY'] = 'wlp_page';
 		}
 
+		# Last visit date
+		global $wgUser;
+		if ( $this->getOption( 'last-visit-date' ) && $wgUser->getID() ) {
+			$q_tables[] = 'wikilog_visits';
+			$q_fields[] = 'wlv_date _wlp_last_visit_date';
+			$q_joins['wikilog_visits'] = array( 'LEFT JOIN', array( 'wlv_post = wlp_page', 'wlv_user' => $wgUser->getID() ) );
+		}
+
 		return array(
 			'tables' => $q_tables,
 			'fields' => $q_fields,
@@ -681,6 +689,14 @@
 			$q_joins['wikilog_posts'] = array( 'JOIN', 'wlp_page = wlc_post' );
 		}
 
+		# Last visit date
+		global $wgUser;
+		if ( $wgUser->getID() ) {
+			$q_tables[] = 'wikilog_visits';
+			$q_fields[] = '( wlv_date >= wlc_updated ) _wlc_visited';
+			$q_joins['wikilog_visits'] = array( 'LEFT JOIN', array( 'wlv_post = wlc_post', 'wlv_user' => $wgUser->getID() ) );
+		}
+
 		return array(
 			'tables' => $q_tables,
 			'fields' => $q_fields,
diff -r 0018f1f35e99 -r d0a6e7a07224 extensions/Wikilog/archives/patch-visits.sql
--- /dev/null
+++ extensions/Wikilog/archives/patch-visits.sql
@@ -0,0 +1,10 @@
+--
+-- Last visit dates for each post.
+--
+CREATE TABLE IF NOT EXISTS /*$wgDBprefix*/wikilog_visits (
+  wlv_user INTEGER UNSIGNED NOT NULL,
+  wlv_post INTEGER UNSIGNED NOT NULL,
+  wlv_date BINARY(14) NOT NULL,
+  PRIMARY KEY (wlv_user, wlv_post)
+) /*$wgDBTableOptions*/;
+
diff -r 0018f1f35e99 -r d0a6e7a07224 extensions/Wikilog/style/wikilog.css
--- extensions/Wikilog/style/wikilog.css
+++ extensions/Wikilog/style/wikilog.css
@@ -221,4 +221,12 @@
 	margin: 0;
 }
 
+.TablePager .TablePager_col__wlp_last_comment_timestamp { padding: 0; text-align: center; }
+
+.wl-unread {
+	display: block;
+	background-color: #ffe0e0;
+	font-weight: bold;
+}
+
 /* kate: indent-mode normal; space-indent off; tab-width 4; */
diff -r 0018f1f35e99 -r d0a6e7a07224 extensions/Wikilog/wikilog-tables.sql
--- extensions/Wikilog/wikilog-tables.sql
+++ extensions/Wikilog/wikilog-tables.sql
@@ -73,6 +73,16 @@
 ) /*$wgDBTableOptions*/;
 
 --
+-- Last visit dates for each post.
+--
+CREATE TABLE IF NOT EXISTS /*$wgDBprefix*/wikilog_visits (
+  wlv_user INTEGER UNSIGNED NOT NULL,
+  wlv_post INTEGER UNSIGNED NOT NULL,
+  wlv_date BINARY(14) NOT NULL,
+  PRIMARY KEY (wlv_user, wlv_post)
+) /*$wgDBTableOptions*/;
+
+--
 -- Authors of each post.
 --
 CREATE TABLE IF NOT EXISTS /*$wgDBprefix*/wikilog_authors (
