# HG changeset patch
# User Vitaliy Filippov <vitalif@yourcmc.ru>
# Date 1346427779 -14400
Bug 77150 - Check refsNoReferences only when clearState == true
Bug 98667 - Append <references /> automatically instead of croaking

diff -r b6139b507754 -r 3640d7df6539 extensions/Cite/Cite_body.php
--- extensions/Cite/Cite_body.php
+++ extensions/Cite/Cite_body.php
@@ -1051,12 +1051,12 @@
 	 *
 	 * @return bool
 	 */
-	function checkRefsNoReferences( &$parser, &$text ) {
+	function checkRefsNoReferences( &$parser, &$text, $clearState ) {
 		if ( $parser->extCite !== $this ) {
-			return $parser->extCite->checkRefsNoReferences( $parser, $text );
+			return $parser->extCite->checkRefsNoReferences( $parser, $text, $clearState );
 		}
 		
-		if ( $parser->getOptions()->getIsSectionPreview() ) {
+		if ( $parser->getOptions()->getIsSectionPreview() || !$clearState ) {
 			return true;
 		}
 
@@ -1064,10 +1064,10 @@
 			if ( count( $refs ) == 0 ) {
 				continue;
 			}
-			$text .= "\n<br />";
 			if ( $group == CITE_DEFAULT_GROUP ) {
-				$text .= $this->error( 'cite_error_refs_without_references' );
+				$text .= "<hr />\n" . $this->references( NULL, array(), $parser );
 			} else {
+				$text .= "\n<br />";
 				$text .= $this->error( 'cite_error_group_refs_without_references', htmlspecialchars( $group ) );
 			}
 		}
@@ -1102,7 +1102,8 @@
 		
 		if ( !Cite::$hooksInstalled ) {
 			$wgHooks['ParserClearState'][] = array( $parser->extCite, 'clearState' );
-			$wgHooks['ParserBeforeTidy'][] = array( $parser->extCite, 'checkRefsNoReferences' );
+			/* mediawiki4intranet: new hook, simple hack for auto-adding <references /> */
+			$wgHooks['ParserAfterInternal'][] = array( $parser->extCite, 'checkRefsNoReferences' );
 			$wgHooks['InlineEditorPartialAfterParse'][] = array( $parser->extCite, 'checkAnyCalls' );
 			Cite::$hooksInstalled = true;
 		}
diff -r b6139b507754 -r 3640d7df6539 includes/parser/Parser.php
--- includes/parser/Parser.php
+++ includes/parser/Parser.php
@@ -339,6 +339,8 @@
 		wfRunHooks( 'ParserAfterStrip', array( &$this, &$text, &$this->mStripState ) );
 		$text = $this->internalParse( $text );
 
+		wfRunHooks( 'ParserAfterInternal', array( &$this, &$text, &$this->mStripState ) );
+
 		$text = $this->mStripState->unstripGeneral( $text );
 
 		# Clean up special characters, only run once, next-to-last before doBlockLevels
@@ -397,7 +399,7 @@
 
 		$text = $this->mStripState->unstripNoWiki( $text );
 
-		wfRunHooks( 'ParserBeforeTidy', array( &$this, &$text ) );
+		wfRunHooks( 'ParserBeforeTidy', array( &$this, &$text, $clearState ) );
 
 		$text = $this->replaceTransparentTags( $text );
 		$text = $this->mStripState->unstripGeneral( $text );
@@ -438,7 +440,7 @@
 			$this->limitationWarn( 'expensive-parserfunction', $this->mExpensiveFunctionCount, $wgExpensiveParserFunctionLimit );
 		}
 
-		wfRunHooks( 'ParserAfterTidy', array( &$this, &$text ) );
+		wfRunHooks( 'ParserAfterTidy', array( &$this, &$text, $clearState ) );
 
 		# Information on include size limits, for the benefit of users who try to skirt them
 		if ( $this->mOptions->getEnableLimitReport() ) {
