# HG changeset patch
# User Vitaliy Filippov <vitalif@yourcmc.ru>
# Date 1330350919 -14400
Originally, this patch included several simple fixes required for
MediaWiki 1.14-1.16 to run under more restrictive PHP 5.3.x.

Now it includes some very simple independent changes to different extensions:
1) Interwiki - always add prefixes lowercased
2) WikiCategoryTagCloud - debug fnShowWatchingUsers()
3) SyntaxHighlight_GeSHi - require_once() geshi.php instead of just require()
4) WhoIsWatching (1.18) - debug to work with 1.18 o_O
5) Serious 1.18 backwards-compatibility bug: incorrect scripts in <head> of
   legacy skins which build <head> by themselves
   https://bugzilla.wikimedia.org/show_bug.cgi?id=34600
6) Another serious bug: setEditSection(false) is not passed to parser output
   https://bugzilla.wikimedia.org/show_bug.cgi?id=34687

diff -r e1f225b28f49 -r 824e2a7a7e91 extensions/Interwiki/Interwiki_body.php
--- extensions/Interwiki/Interwiki_body.php
+++ extensions/Interwiki/Interwiki_body.php
@@ -177,7 +177,7 @@
 	}
 
 	function doSubmit() {
-		global $wgRequest, $wgOut;
+		global $wgRequest, $wgOut, $wgContLang;
 		$prefix = $wgRequest->getVal( 'wpInterwikiPrefix' );
 		$do = $wgRequest->getVal( 'wpInterwikiAction' );
 		// show an error if the prefix is invalid (only when adding one)
@@ -202,8 +202,9 @@
 				$log->addEntry( 'iw_delete', $selfTitle, $reason, array( $prefix ) );
 			}
 			break;
+		case 'add':
+			$prefix = $wgContLang->lc( $prefix );
 		case 'edit':
-		case 'add':
 			$theurl = $wgRequest->getVal( 'wpInterwikiURL' );
 			$local = $wgRequest->getCheck( 'wpInterwikiLocal' ) ? 1 : 0;
 			$trans = $wgRequest->getCheck( 'wpInterwikiTrans' ) ? 1 : 0;
diff -r e1f225b28f49 -r 824e2a7a7e91 extensions/PagedTiffHandler/PagedTiffHandler.image.php
--- extensions/PagedTiffHandler/PagedTiffHandler.image.php
+++ extensions/PagedTiffHandler/PagedTiffHandler.image.php
@@ -335,6 +335,7 @@
 		}
 
 		$infos = null;
+		$state->prevPage = -1;
 		preg_match_all( '/\[BEGIN\](.+?)\[END\]/si', $dump, $infos, PREG_SET_ORDER );
 		foreach ( $infos as $info ) {
 			$state->resetPage();
diff -r e1f225b28f49 -r 824e2a7a7e91 extensions/SyntaxHighlight_GeSHi/SyntaxHighlight_GeSHi.class.php
--- extensions/SyntaxHighlight_GeSHi/SyntaxHighlight_GeSHi.class.php
+++ extensions/SyntaxHighlight_GeSHi/SyntaxHighlight_GeSHi.class.php
@@ -354,7 +354,7 @@
 	private static function initialise() {
 		if( !self::$initialised ) {
 			if( !class_exists( 'GeSHi' ) ) {
-				require( 'geshi/geshi.php' );
+				require_once( 'geshi/geshi.php' );
 			}
 			self::$initialised = true;
 		}
diff -r e1f225b28f49 -r 824e2a7a7e91 extensions/WhoIsWatching/WhoIsWatching_body.php
--- extensions/WhoIsWatching/WhoIsWatching_body.php
+++ extensions/WhoIsWatching/WhoIsWatching_body.php
@@ -84,33 +84,34 @@
 			}
 			ksort($users);
 			foreach ($users as $name => $id)
-			$wgOut->addHTML("<option value=\"".$id."\">".$name."</option>");
+				$wgOut->addHTML("<option value=\"".$id."\">".$name."</option>");
 			$wgOut->addHTML('</select></td><td>');
 			$wgOut->addHTML("<input type=\"submit\" value=\"".wfMsg('specialwhoiswatchingaddbtn')."\" />");
 			$wgOut->addHTML("</td></tr></table></div></form>");
 		}
 	}
 }
- 
-function fnShowWatchingCount(&$template, &$tpl)
+
+function fnShowWatchingCount( &$template, &$tpl )
 {
     global $wgLang, $wgPageShowWatchingUsers, $whoiswatching_showifzero, $wgOut;
 
-    if ($wgPageShowWatchingUsers && $whoiswatching_showifzero) {
+    if ( $wgPageShowWatchingUsers && $whoiswatching_showifzero ) {
         $dbr = wfGetDB( DB_SLAVE );
         $watchlist = $dbr->tableName( 'watchlist' );
-        $sql = "SELECT COUNT(*) AS n FROM $watchlist
-                WHERE wl_title='" . $dbr->strencode($template->mTitle->getDBkey()) .
-                "' AND  wl_namespace=" . $template->mTitle->getNamespace() ;
-        $res = $dbr->query( $sql, 'SkinTemplate::outputPage');
+        $t = $template->getTitle();
+        $res = $dbr->select( 'watchlist', 'COUNT(*) n', array(
+            'wl_namespace' => $t->getNamespace(),
+            'wl_title' => $t->getDBkey(),
+        ), 'SkinTemplate::outputPage' );
         $x = $dbr->fetchObject( $res );
         $numberofwatchingusers = $x->n;
-        $tpl->set('numberofwatchingusers',
-                  wfMsgExt('number_of_watching_users_pageview', array('parseinline'),
-                  $wgLang->formatNum($numberofwatchingusers))
+        $msg = wfMsgExt(
+            'number_of_watching_users_pageview', array( 'parseinline' ),
+            $wgLang->formatNum( $numberofwatchingusers )
         );
+        $tpl->set( 'numberofwatchingusers', $msg );
     }
 
     return true;
 }
-
diff -r e1f225b28f49 -r 824e2a7a7e91 extensions/WikiCategoryTagCloud/WikiCategoryTagCloud.php
--- extensions/WikiCategoryTagCloud/WikiCategoryTagCloud.php
+++ extensions/WikiCategoryTagCloud/WikiCategoryTagCloud.php
@@ -45,7 +45,7 @@
 }
 
 function invalidateCache() {
-	$titles[0] = explode( "\n", wfMsg( 'tagcloudpages' ) );
+	$titles = explode( "\n", wfMsg( 'tagcloudpages' ) );
 
 	for ( $i = 0; $i < count( $titles ); $i++ ) {
 		$t = Title::newFromText( $titles[$i] );
diff -r e1f225b28f49 -r 824e2a7a7e91 includes/SkinTemplate.php
--- includes/SkinTemplate.php
+++ includes/SkinTemplate.php
@@ -509,7 +509,7 @@
 		if ( $this->useHeadElement ) {
 			$tpl->set( 'headelement', $out->headElement( $this ) );
 		} else {
-			$tpl->set( 'headscripts', $out->getScript() );
+			$tpl->set( 'headscripts', $out->getHeadScripts( $this ) . $out->getHeadItems() );
 		}
 
 		$tpl->set( 'debughtml', $this->generateDebugHTML() );
diff -r e1f225b28f49 -r 824e2a7a7e91 includes/parser/Parser.php
--- includes/parser/Parser.php
+++ includes/parser/Parser.php
@@ -3765,9 +3765,7 @@
 		} else {
 			$showEditLink = $this->mOptions->getEditSection();
 		}
-		if ( $showEditLink ) {
-			$this->mOutput->setEditSectionTokens( true );
-		}
+		$this->mOutput->setEditSectionTokens( $showEditLink );
 
 		# Get all headlines for numbering them and adding funky stuff like [edit]
 		# links - this is for later, but we need the number of headlines right now
