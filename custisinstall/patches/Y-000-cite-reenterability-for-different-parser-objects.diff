# HG changeset patch
# User Vitaliy Filippov <vitali@st-filippov.office.custis.ru>
# Date 1263316087 -10800
"Cite" extension was not reenterable even when called from different parser objects

diff -r f8e807a6a9d0 -r bab9778544b7 extensions/Cite/Cite_body.php
--- extensions/Cite/Cite_body.php
+++ extensions/Cite/Cite_body.php
@@ -114,12 +114,12 @@
 	 */
 	function ref( $str, $argv, $parser ) {
 		wfLoadExtensionMessages( 'Cite' );
-		if ( $this->mInCite ) {
+		if ( $parser->egCiteInCite ) {
 			return htmlspecialchars( "<ref>$str</ref>" );
 		} else {
-			$this->mInCite = true;
+			$parser->egCiteInCite = true;
 			$ret = $this->guardedRef( $str, $argv, $parser );
-			$this->mInCite = false;
+			$parser->egCiteInCite = false;
 			return $ret;
 		}
 	}
@@ -186,7 +186,7 @@
 			# fers to an existing one.  If it refers to a nonexistent ref,
 			# we'll figure that out later.  Likewise it's definitely valid
 			# if there's any content, regardless of key.
-			return $this->stack( $str, $key, $group );
+			return $this->stack( $parser, $str, $key, $group );
 		}
 
 		# Not clear how we could get here, but something is probably
@@ -239,56 +239,58 @@
 	}
 
 	/**
-	 * Populate $this->mRefs based on input and arguments to <ref>
+	 * Populate $parser->egCiteRefs based on input and arguments to <ref>
 	 *
 	 * @param string $str Input from the <ref> tag
 	 * @param mixed $key Argument to the <ref> tag as returned by $this->refArg()
 	 * @return string 
 	 */
-	function stack( $str, $key = null, $group ) {
-		if (! isset($this->mRefs[$group])) 
-			$this->mRefs[$group]=array();
-		if (! isset($this->mGroupCnt[$group]))
-			$this->mGroupCnt[$group]=0;
+	function stack( $parser, $str, $key = null, $group ) {
+		if (! isset($parser->egCiteRefs[$group])) 
+			$parser->egCiteRefs[$group]=array();
+		if (! isset($parser->egCiteGroupCnt[$group]))
+			$parser->egCiteGroupCnt[$group]=0;
 
 		if ( $key === null ) {
 			// No key
-			//$this->mRefs[$group][] = $str;
-			$this->mRefs[$group][] = array('count'=>-1, 'text'=>$str, 'key'=>++$this->mOutCnt);
+			//$parser->egCiteRefs[$group][] = $str;
+			$parser->egCiteRefs[$group][] = array('count'=>-1, 'text'=>$str, 'key'=>++$parser->egCiteOutCnt);
 
-			return $this->linkRef( $group, $this->mInCnt++ );
+			return $this->linkRef( $parser, $group, $parser->egCiteInCnt++ );
 		} else if ( is_string( $key ) ) {
 			// Valid key
-			if ( ! isset( $this->mRefs[$group][$key] ) || ! is_array( $this->mRefs[$group][$key] ) ) {
+			if ( ! isset( $parser->egCiteRefs[$group][$key] ) || ! is_array( $parser->egCiteRefs[$group][$key] ) ) {
 				// First occurance
-				$this->mRefs[$group][$key] = array(
+				$parser->egCiteRefs[$group][$key] = array(
 					'text' => $str,
 					'count' => 0,
-					'key' => ++$this->mOutCnt,
-					'number' => ++$this->mGroupCnt[$group]
+					'key' => ++$parser->egCiteOutCnt,
+					'number' => ++$parser->egCiteGroupCnt[$group]
 				);
-				$this->mInCnt++;
+				$parser->egCiteInCnt++;
 				return
 					$this->linkRef(
+						$parser,
 						$group,
 						$key,
-						$this->mRefs[$group][$key]['key']."-".$this->mRefs[$group][$key]['count'],
-						$this->mRefs[$group][$key]['number'],
-						"-".$this->mRefs[$group][$key]['key']
+						$parser->egCiteRefs[$group][$key]['key']."-".$parser->egCiteRefs[$group][$key]['count'],
+						$parser->egCiteRefs[$group][$key]['number'],
+						"-".$parser->egCiteRefs[$group][$key]['key']
 					);
 			} else {
 				// We've been here before
-				if ( $this->mRefs[$group][$key]['text'] === null && $str !== '' ) {
+				if ( $parser->egCiteRefs[$group][$key]['text'] === null && $str !== '' ) {
 					// If no text found before, use this text
-					$this->mRefs[$group][$key]['text'] = $str;
+					$parser->egCiteRefs[$group][$key]['text'] = $str;
 				};
 				return 
 					$this->linkRef(
+						$parser,
 						$group,
 						$key,
-						$this->mRefs[$group][$key]['key']."-".++$this->mRefs[$group][$key]['count'],
-						$this->mRefs[$group][$key]['number'],
-						"-".$this->mRefs[$group][$key]['key']
+						$parser->egCiteRefs[$group][$key]['key']."-".++$parser->egCiteRefs[$group][$key]['count'],
+						$parser->egCiteRefs[$group][$key]['number'],
+						"-".$parser->egCiteRefs[$group][$key]['key']
 					); }
 		}
 
@@ -305,16 +307,16 @@
 	 */
 	function references( $str, $argv, $parser ) {
 		wfLoadExtensionMessages( 'Cite' );
-		if ( $this->mInCite ) {
+		if ( $parser->egCiteInCite ) {
 			if ( is_null( $str ) ) {
 				return htmlspecialchars( "<references/>" );
 			} else {
 				return htmlspecialchars( "<references>$str</references>" );
 			}
 		} else {
-			$this->mInCite = true;
+			$parser->egCiteInCite = true;
 			$ret = $this->guardedReferences( $str, $argv, $parser );
-			$this->mInCite = false;
+			$parser->egCiteInCite = false;
 			return $ret;
 		}
 	}
@@ -339,7 +341,7 @@
 		elseif ( count( $argv ) )
 			return $this->error( 'cite_error_references_invalid_parameters' );
 		else
-			return $this->referencesFormat($group);
+			return $this->referencesFormat($parser, $group);
 	}
 
 	/**
@@ -347,14 +349,14 @@
 	 *
 	 * @return string XHTML ready for output
 	 */
-	function referencesFormat($group) {
-		if (( count( $this->mRefs ) == 0 ) or (empty( $this->mRefs[$group] ) ))
+	function referencesFormat($parser, $group) {
+		if (( count( $parser->egCiteRefs ) == 0 ) or (empty( $parser->egCiteRefs[$group] ) ))
 			return '';
 		
 		wfProfileIn( __METHOD__ );
 		wfProfileIn( __METHOD__ .'-entries' );
 		$ent = array();
-		foreach ( $this->mRefs[$group] as $k => $v )
+		foreach ( $parser->egCiteRefs[$group] as $k => $v )
 			$ent[] = $this->referencesFormatEntry( $k, $v );
 		
 		$prefix = wfMsgForContentNoTrans( 'cite_references_prefix' );
@@ -369,8 +371,8 @@
 		wfProfileOut( __METHOD__ );
 		
 		//done, clean up so we can reuse the group
-		unset ($this->mRefs[$group]);
-		unset($this->mGroupCnt[$group]);
+		unset ($parser->egCiteRefs[$group]);
+		unset($parser->egCiteGroupCnt[$group]);
 			
 		return $ret;
 	}
@@ -542,7 +544,7 @@
 	 *                   the same named reference.
 	 * @return string
 	 */
-	function linkRef( $group, $key, $count = null, $label = null, $subkey = '' ) {
+	function linkRef( $parser, $group, $key, $count = null, $label = null, $subkey = '' ) {
 		global $wgContLang;
 		return
 			$this->parse(
@@ -550,7 +552,7 @@
 					'cite_reference_link',
 					$this->refKey( $key, $count ),
 					$this->referencesKey( $key . $subkey ),
-					(($group == CITE_DEFAULT_GROUP)?'':"$group ").$wgContLang->formatNum( is_null( $label ) ? ++$this->mGroupCnt[$group] : $label )
+					(($group == CITE_DEFAULT_GROUP)?'':"$group ").$wgContLang->formatNum( is_null( $label ) ? ++$parser->egCiteGroupCnt[$group] : $label )
 				)
 			);
 	}
@@ -652,16 +654,16 @@
 	 * Gets run when Parser::clearState() gets run, since we don't
 	 * want the counts to transcend pages and other instances
 	 */
-	function clearState() {
+	function clearState($parser) {
 		# Don't clear state when we're in the middle of parsing
 		# a <ref> tag
-		if($this->mInCite)
+		if($parser->egCiteInCite)
 			return true;
  
-		$this->mGroupCnt = array();
-		$this->mOutCnt = -1;
-		$this->mInCnt = 0;
-		$this->mRefs = array();
+		$parser->egCiteGroupCnt = array();
+		$parser->egCiteOutCnt = -1;
+		$parser->egCiteInCnt = 0;
+		$parser->egCiteRefs = array();
 
 		return true;
 	}

